--- doc/psp-gen.xml	2012-06-26 15:38:53.000000000 -0700
+++ /Users/cegrant/projects/meme/doc/psp-gen.xml	2012-06-22 10:23:30.000000000 -0700
@@ -431,13 +431,9 @@
   ambiguous characters:
   <ul>
     <li><i>ambiguous characters in the sequence data</i>:
-    if you use <code>-arbitraryOK</code>, for
-    DNA, <code>N</code> is recognized as standing for any letter; for
-    protein, <code>B</code>, <code>J</code>, <code>Z</code>
-    and <code>X</code> are recognized as ambiguous. In either case,
-    the effect of encountering any of these letters is to score a word
-    or triple containing them as zero (default: ambiguous characters
-    cause error termination).
+    The effect of encountering any of these letters is to score a word
+    or triple containing them as if it only occurs once, to minimize its
+    score.
     </li>
     <li><i>treat specific letters as equivalent</i>: use
     the <code>-equiv</code> option to treat specific groups of letters
@@ -522,7 +518,7 @@
 command line reproduces this run:
 </p>
 <pre>
-time psp-gen -neg pos60k.fasta -pos neg60k.fasta -alpha prot -minw 3 -maxw 50 -arbitraryOK -triples > priors60kmaxw50.psp
+time psp-gen -neg pos60k.fasta -pos neg60k.fasta -alpha prot -minw 3 -maxw 50 -triples > priors60kmaxw50.psp
 </pre>
 
 <p>
@@ -531,10 +527,10 @@
 
 <ul>
 <li>
-Any letters in sequence represening ambiguous bases result in a word
-(<i>w</i>-mer) containing that word (or triple in the case of protein)
-being counted whether in the positive or negative sets as if it
-occurred once.
+Any letters in sequence represening ambiguous bases or amino acids
+result in a word (<i>w</i>-mer) containing that word (or triple in
+the case of protein) being counted whether in the positive or
+negative sets as if it occurred once, to minimize its score.
 </li>
 </ul>
 
--- scripts/meme_webservice.pl.in	2012-06-26 15:38:49.000000000 -0700
+++ /Users/cegrant/projects/meme/scripts/meme_webservice.pl.in	2012-06-25 17:05:11.000000000 -0700
@@ -198,7 +198,7 @@
   my $psp_minw = $minw < $MINPSPW ? $MINPSPW : $minw;
   my $psp_maxw = $maxw > $MAXPSPW ? $MAXPSPW : $maxw;
   my @pspgen_args = ('-pos', $sequences, '-neg', $negfile, '-alpha', $psp_alph, 
-    '-minw', $psp_minw, '-maxw', $psp_maxw, '-arbitraryOK');
+    '-minw', $psp_minw, '-maxw', $psp_maxw);
   push(@pspgen_args, '-maxrange', '-triples') if ($psp_alph eq 'prot');
   run_prog(
     PROG => 'psp-gen', 
