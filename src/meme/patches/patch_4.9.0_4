diff -r d9c9ee50346d -r 61325860cd46 doc/fimo.xml
--- a/doc/fimo.xml	Sat Oct 27 20:25:01 2012 -0700
+++ b/doc/fimo.xml	Tue Jan 22 18:14:22 2013 +1000
@@ -112,16 +112,19 @@
       The <code>--text</code> option will limit output to plain text sent to the standard output.
       This will diable the calcualtion of q-values.
       </p>
+      <p>
+      The score reported in the GFF output is <code>min(1000, -10*(log10(pvalue)))</code>.
+      </p>
       <p>The HTML and plain text output contain the following columns:</p>
       <ul>
         <li>The motif identifier</li>
         <li>The sequence identiifer</li>
-        <li>The strand.
+        <li>The strand
         <code>+</code> indicates the motif matched the forward strand,
         <code>-</code> the reverse strand,
         and <code>.</code> indicates strand is not applicable (as for amino acid sequences).</li>
-        <li>The start position of the motif occurence (closed, 1-based coordinates)</li>
-        <li>The end position of the motif occurence (closed, 1-based coordinates). 
+        <li>The start position of the motif occurence (closed, 1-based coordinates, unless genomic coordinates are provided)</li>
+        <li>The end position of the motif occurence (closed, 1-based coordinates, unless genomic coordinates are provided). 
         </li>
         <li>The score for the motif occurence.
         The score is computed by by summing the appropriate entries from each column of
@@ -157,6 +160,7 @@
       <li><command-option name="norc"/></li>
       <li><command-option name="o"/></li>
       <li><command-option name="oc"/></li>
+      <li><command-option name="parse-genomic-coord"/></li>
       <li><command-option program="fimo" name="psp"/></li>
       <li><command-option program="fimo" name="prior-dist"/></li>
       <li><command-option name="qv-thresh"/></li>
diff -r e77390759cae -r 61325860cd46 doc/meme-chip.html
--- a/doc/meme-chip.html	Thu Nov 22 18:53:34 2012 +1100
+++ b/doc/meme-chip.html	Tue Jan 22 18:14:22 2013 +1000
@@ -230,17 +230,23 @@
             <th colspan="4">CentriMo Specific Options</th>
           </tr>
           <tr>
-            <td class="popt">-centrimo-score</td><td><span class="pdat">score</span></td>
-            <td>Set the minimum accepted score for a match.</td>
-            <td>A minimum score of 5 is used.</td>
-          </tr>
-          <tr>
-            <td class="popt">-centrimo-maxreg</td><td><span class="pdat">region</span></td>
-            <td>Set the size of the maximum region size tested.</td>
-            <td>CentriMo will test all valid region sizes.</td>
-          </tr>
-          <tr>
-            <td class="popt">-centrimo-ethresh</td><td><span class="pdat"><i>E</i>-value</span></td>
+            <td class="popt">-centrimo-local</td><td>&nbsp;</td>
+	  <td>CentriMo perform <i>local</i> motif enrichment analysis,
+	      computing enrichment in every possible sequence region.</td>
+	  <td>CentriMo will perform <i>central</i> motif enrichment analysis,
+              computing enrichment in centered regions only.</td>
+	<tr>
+	  <td class="popt">-centrimo-score</td><td><span class="pdat">score</span></td>
+	  <td>Set the minimum accepted score for a match.</td>
+	  <td>A minimum score of 5 is used.</td>
+	</tr>
+	<tr>
+	  <td class="popt">-centrimo-maxreg</td><td><span class="pdat">region</span></td>
+	  <td>Set the size of the maximum region size tested.</td>
+	  <td>CentriMo will test all valid region sizes.</td>
+	</tr>
+	<tr>
+	  <td class="popt">-centrimo-ethresh</td><td><span class="pdat"><i>E</i>-value</span></td>
             <td>Set the <i>E</i>-value threshold for reporting enriched central regions.</td>
             <td>An <i>E</i>-value threshold of 10 will be used.</td>
           </tr>
diff -r e77390759cae -r 61325860cd46 doc/options.xsl
--- a/doc/options.xsl	Thu Nov 22 18:53:34 2012 +1100
+++ b/doc/options.xsl	Tue Jan 22 18:14:22 2013 +1000
@@ -493,6 +493,25 @@
     If the directory already exists, the contents will be overwritten.
   </xsl:template>
 
+  <xsl:template match="command-option[@name='parse-genomic-coord']">
+    <code>--parse-genomic-coord</code>
+    When this option is specified each sequence header will be checked
+    for UCSC style genomic coordinates. 
+    These are of the form
+    <pre>
+      &gt;<i>seq-name</i>:<i>starting pos.</i>-<i>ending pos.</i>
+    </pre>
+    where <i>seq-name</i> is the name of the sequence,
+    <i>starting pos.</i> is the index of the first base,
+    and 
+    <i>ending pos.</i> is the index of the final base.
+    <i>seq-name</i> may not contain any white space.
+    If genomic coordinates are found they will be used
+    as the coordinates in the output.
+    If no coordinate are found, the first position in the 
+    sequence will assumed to be 1.
+  </xsl:template>
+
   <xsl:template match="command-option[@name='desc']">
     <code>--desc <i>&lt;description&gt;</i></code>
     - Specifies a description to be stored in the output.
diff -r e77390759cae -r 61325860cd46 doc/release-notes.html
--- a/doc/release-notes.html	Thu Nov 22 18:53:34 2012 +1100
+++ b/doc/release-notes.html	Tue Jan 22 18:14:22 2013 +1000
@@ -29,6 +29,74 @@
             <h2>MEME Suite System Release Notes </h2>
             <hr>
             <p>
+              <b>MEME version 4.9.0 patch 4 -- January 29, 2013</b>
+            </p>
+            <ul>
+              <li><b>New Features and Enhancements</b>
+                <ul>
+                  <li>CentriMo
+                    <ul>
+
+                      <li>Added computation of <i>p-</i>value ratio whenever
+                      negative sequences are given. The <i>p-</i>value ratio
+                      seems to be more useful than the discriminative
+                      <i>p-</i>value computed in the <code>--disc</code> mode,
+                      and is much faster to compute. Motifs are now sorted by
+                      <i>p-</i>value ratio by default when negative sequences
+                      are given and <code>--disc</code> is not.</li>
+
+		      <li>Added feature to supress plotting of negative sequence
+			enrichment curves so a single run can be used for
+			comparative and absolute enrichment analysis.
+
+		      <li>Sorting on Region Center now sorts by increasing
+			absolute value (centrality) of the location of the region.</li>
+
+                      <li>The "region" sorting feature menu is now locked to the
+                      same value as the "motifs" feature menu, unless a checkbox
+                      is checked.  This helps prevent confusion.</li>
+
+
+                      <li>Improved documentation popups.</li>
+
+                      <li>Fixed bug in the Fisher Exact test (affected AME,
+                      too).</li>
+
+                      <li>Added new standalone utility: fisher_exact</li>
+
+                    </ul>
+                  </li>
+                  <li>MEME-ChIP
+                    <ul>
+                      <li>Added -centrimo-local switch to allow CentriMo to perform
+                      local motif enrichment as part of MEME-ChIP.</li>
+                    </ul>
+                  <li>FIMO
+                    <ul>
+                      <li>Added <code>--parse-genomic-coords</code> option.
+                      This option turns on parsing of UCSC style genomic
+                      coordinates from sequence headers.</li>
+                    </ul>
+                  </li>
+                  <li>taipale2meme
+		    <ul>
+                       <li>Add options [-nc <c>]+ and [-oc <c>] to accomodate
+			   format of Jolma2013 Cell paper.
+		    </ul>
+                  </li>
+                </ul>
+              </li>
+              <li>
+                <b>Bug fixes</b>
+                <ul>
+                  <li>Fixed buffer overflow bug in shift_sequence().</li>
+
+                  <li>Fixed bug in DREME: -norc option resulted in incorrect PSSM.</li>
+                </ul>
+              </li>
+            </ul>
+            <hr>
+            <p>
               <b>MEME version 4.9.0 -- October 2, 2012</b>
             </p>
             <ul>
@@ -118,7 +186,7 @@
             </ul>
 
             <hr>
-	          <p>
+            <p>
               <b>MEME version 4.8.1 -- February 6, 2012</b>
             </p>
             <ul>
diff -r 5863bee1d071 -r d599bef20e3c etc/centrimo_config.xml.in
--- a/etc/centrimo_config.xml.in	Fri Dec 07 10:34:33 2012 +1000
+++ b/etc/centrimo_config.xml.in	Tue Jan 22 21:34:22 2013 -0800
@@ -6,20 +6,62 @@
       centrimo_webservice [options] <sequences file> <motif databases>
 
         Options:
+          -local            compute the enrichment of all regions; 
+                             default: central regions only
           -score <score>    minimum score counted as hit
+          -optsc            search for optimized score above the threshold given by
+                             '-score' argument. Slow computation due to multiple tests
           -ethresh <evalue> minimum E-value to report
-          -maxwin <window>  maximum window size to test
-          -bfile <file>     background file
+          -maxreg <region>  maximum region size to test
+          -neg <file>       plot a negative set of sequences against the default set
+                            and test each window with the Fisher Exact Test
           -upmotifs <file>  uploaded motifs
+          -bfile <file>     background file (0-order)
+          -norc             don't scan with the reverse complement motif
+          -flip             allow 'fliping' of sequences causing rc matches to appear
+                             'reflected' around center
+          -noseq            don't store sequence ids in the output
           -help             brief help message
 
         Motif Databases
-          The motif databases may be specified as a pattern using * as a wildcard.    
+          The motif databases may be specified as a pattern using * as a wildcard.
     ]]>
     </info>
 
     <!-- information about command-line arguments -->
     <types>
+      <flags>
+        <flag>
+          <id>local</id>
+          <tag>-local</tag>
+          <textDesc>Localized Search</textDesc>
+          <default>false</default>
+        </flag>
+        <flag>
+          <id>optsc</id>
+          <tag>-optsc</tag>
+          <textDesc>Optimize Score</textDesc>
+          <default>false</default>
+        </flag>
+        <flag>
+          <id>norc</id>
+          <tag>-norc</tag>
+          <textDesc>No Reverse Complement</textDesc>
+          <default>false</default>
+        </flag>
+        <flag>
+          <id>flip</id>
+          <tag>-flip</tag>
+          <textDesc>Reflect RC Matches</textDesc>
+          <default>false</default>
+        </flag>
+        <flag>
+          <id>noseq</id>
+          <tag>-noseq</tag>
+          <textDesc>Don't Store Seq IDs</textDesc>
+          <default>false</default>
+        </flag>
+      </flags>
       <taggedParams>
         <separator> </separator>
         <param>
@@ -37,10 +79,17 @@
           <textDesc>E-value threshold</textDesc>
         </param>
         <param>
-          <id>maxwin</id>
-          <tag>-maxwin</tag>
+          <id>maxreg</id>
+          <tag>-maxreg</tag>
           <paramType>INT</paramType>
-          <textDesc>Maximum window to test</textDesc>
+          <textDesc>Maximum region size to test</textDesc>
+        </param>
+        <param>
+          <id>neg</id>
+          <tag>-neg</tag>
+          <paramType>FILE</paramType>
+          <ioType>INPUT</ioType>
+          <textDesc>Comparative Sequences</textDesc>
         </param>
         <param>
           <id>bfile</id>
@@ -74,14 +123,24 @@
       <groups>
         <group>
           <name>inputs</name>
-          <elements>sequences dbmotifs upmotifs bfile</elements>
+          <elements>sequences dbmotifs neg upmotifs bfile</elements>
           <textDesc>Inputs</textDesc>
         </group>
         <group>
+          <name>scan_options</name>
+          <elements>local norc flip</elements>
+          <textDesc>Scan Options</textDesc>
+        </group>
+        <group>
           <name>threshold</name>
-          <elements>score maxwin ethresh</elements>
+          <elements>score optsc maxreg ethresh</elements>
           <textDesc>Thresholds</textDesc>
         </group>
+        <group>
+          <name>output_options</name>
+          <elements>noseq</elements>
+          <textDesc>Output Options</textDesc>
+        </group>
       </groups>
     </types>
   </metadata>
diff -r e77390759cae -r 61325860cd46 etc/centrimo_template.css
--- a/etc/centrimo_template.css	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/centrimo_template.css	Tue Jan 22 18:14:22 2013 +1000
@@ -54,6 +54,9 @@
 table.hide_name .col_name {
   display: none;
 }
+table.hide_fisherpv .col_fisherpv {
+  display: none;
+}
 table.hide_evalue .col_evalue {
   display: none;
 }
diff -r e77390759cae -r 61325860cd46 etc/centrimo_template.html
--- a/etc/centrimo_template.html	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/centrimo_template.html	Tue Jan 22 18:14:22 2013 +1000
@@ -77,6 +77,11 @@
         <dt>Legend</dt>
         <dd><p>Choose to display/disable the on-graph legend. The legend can be 
         moved by clicking on the graph.</p></dd>
+        <dt>Negative Sequences</dt>
+        <dd><p>Choose whether to plot the motif probability curve(s) for the
+        negative sequences (if provided). The curve(s) are plotted as dashed
+        lines, using the same color as the corresponding curve for the positive
+        sequences.</p></dd>
         <dt>Download EPS</dt>
         <dd><p>Download the graph that you are currently viewing as an 
         encapsulated postscript (EPS) image. EPS images are scalable making them
@@ -95,6 +100,31 @@
       <div style="float:right; bottom:0px;">[
         <a href="javascript:help_popup()">close</a> ]</div>
     </div>
+    <div class="pop_content" id="pop_sorting">
+      <p>Sorting is applied after filtering where possible (the exception being
+      the "Top" filter) so the filters applied will affect the sort.  You can
+      choose the motif sorting feature using the "Motifs:" menu.</p> 
+      <p>If CentriMo is searching for locally enriched regions (not just centrally
+      enriched regions), then multiple regions may be found per motif, and
+      the "Regions:" menu will also be displayed.  In this case, 
+      CentriMo first sorts all regions using the feature
+      shown in the "Regions:" menu, and then it sorts the highest-ranked
+      region of each motif according to the feature shown in the "Motifs:" menu.
+      </p>
+      <p>
+      Unless you check the box next to the "Regions:" menu, it will automatically 
+      show the same feature as the "Motifs:"
+      menu (or "<i>E</i>-value" if a motif-only feature is chosen in the "Motifs:" menu). 
+      </p>
+      <p>
+      <b>Note:</b>The motif <i>p</i>-value shown in the plot legend will always be for
+      the region with the lowest <i>p</i>-value, and therefore may not match the value
+      shown in the table "<i>p</i>-value" column 
+      when the "Regions:" menu is not set to "<i>p</i>-value".
+      </p>
+      <div style="float:right; bottom:0px;">[ 
+        <a href="javascript:help_popup()">close</a> ]</div>
+    </div>
     <div class="pop_content" id="pop_db">
       <p>The name of the database (file name) that contains the motif.</p>
       <div style="float:right; bottom:0px;">[ 
@@ -110,6 +140,29 @@
       <div style="float:right; bottom:0px;">[ 
         <a href="javascript:help_popup()">close</a> ]</div>
     </div>
+    <div class="pop_content" id="pop_fisherpv">
+      <p>The expected number motifs that would have least one 
+        region as <b>comparatively</b> enriched for 
+        best matches to the motif as the reported region in the
+        <b>positive</b> sequences compared with the <b>negative</b>
+        sequences.  
+      </p>
+      <p>
+        The Fisher <i>E</i>-value is the (one-sided) <i>p</i>-value of 
+	the Fisher exact test that <b>at least</b> as many best matches 
+	in the region in the positive sequences that contain at least 
+	one match, multiplied by the number of motifs in the input database(s).
+        The Fisher exact test <i>p</i>-value is corrected for the number
+	of regions and score thresholds tested ("Multiple Tests").
+      </p>
+      <p>
+        The Fisher exact test assumes that the probability that the best match 
+	(if any) falls into a given region is the same for all 
+	positive and negative sequences.
+      </p>
+      <div style="float:right; bottom:0px;">[ 
+        <a href="javascript:help_popup()">close</a> ]</div>
+    </div>
     <div class="pop_content" id="pop_pvalue">
       <p>The probability that any tested region would be as enriched for 
       best matches to this motif as the reported region is.</p>
@@ -121,13 +174,14 @@
       in the region is the region width divided by the number of
       places a motif can align in the sequence (sequence length minus motif
       width plus 1).</p>
-      <p>When CentriMo is run in discriminative mode with a negative set, the
+      <p>When CentriMo is run in discriminative mode with a negative set of sequences, the
       <i>p</i>-value of a region is calculated using the Fisher exact test
       on the enrichment of best matches in the positive sequences ("Region Matches")
       relative to the negative sequences ("Negative Region Matches"), 
       corrected for the number of regions and score thresholds tested ("Multiple Tests").  
-      The test assumes that the probability that the best match falls into a given region is the same
-      for all positive and negative sequences.
+      The test assumes that the probability that the best match 
+      (if any) falls into a given region is the same for all 
+      positive and negative sequences.
       <div style="float:right; bottom:0px;">[ 
         <a href="javascript:help_popup()">close</a> ]</div>
     </div>
@@ -153,7 +207,7 @@
         <dd>FN is the number of positive sequences without a best match in the reported region.</dd>
       </dl>
       <p>MCC ranges from -1 to +1, where a +1 result indicates that the occurrence
-      of a best match to the motif in the reported region perfectly discriminates positive
+      of the best match to the motif in the reported region perfectly discriminates positive
       sequences from negative sequences.
       <div style="float:right; bottom:0px;">[ 
         <a href="javascript:help_popup()">close</a> ]</div>
@@ -236,7 +290,7 @@
       <p>where <i>p</i> is the uncorrected <i>p</i>-value.
       The number of multiple tests is the number of regions considered times the
       number of score thresholds considered.  It depends on the motif length, sequence length, 
-      and the type of optimizations being done (central enrichment, local enrichemnt, score
+      and the type of optimizations being done (central enrichment, local enrichement, score
       optimization).</p>
       <div style="float:right; bottom:0px;">[ 
         <a href="javascript:help_popup()">close</a> ]</div>
@@ -380,6 +434,13 @@
               <option value="1" selected>Enabled (click on graph to move)</option>
             </select>
           </div>
+          <div id=CB_show_plot_negative>
+            <label for="plot_negative">Negative sequences:</label>
+            <select id="plot_negative" onchange="make_MP_graph()">
+              <option value="0">Not plotted</option>
+              <option value="1" selected>Plotted as dashed line</option>
+            </select>
+          </div>
           <div style="margin-top:10px;"> 
             <form id="eps_form" method="post" action="">
               <script>$("eps_form").action = site_url + "/cgi-bin/echo.cgi";</script>
@@ -414,8 +475,12 @@
                   onclick="help_popup(this, 'pop_name')"></div></th>
               <th class='col_evalue'><i>E</i>-value&nbsp;<div class="help" 
                     onclick="help_popup(this, 'pop_evalue')"></div></th>
+              <th class='col_fisherpv'>Fisher <i>E</i>-value&nbsp;<div class="help" 
+                    onclick="help_popup(this, 'pop_fisherpv')"></div></th>
               <th class="col_pvalue"><i>p</i>-value&nbsp;<div class="help" 
                   onclick="help_popup(this, 'pop_pvalue')"></div></th>
+              <th class="col_negative_binomial">Negative <i>p</i>-value&nbsp;<div class="help" 
+                  onclick="help_popup(this, 'pop_negative_binomial')"></div></th>
               <th class="col_MCC">MCC&nbsp;<div class="help" 
                   onclick="help_popup(this, 'pop_MCC')"></div></th>
               <th class="col_blocation">Region Center&nbsp;<div class="help" 
@@ -430,8 +495,6 @@
                   onclick="help_popup(this, 'pop_neg_bin_sites')"></div></th>
               <th class="col_negtsites">Negative Total Matches&nbsp;<div class="help" 
                   onclick="help_popup(this, 'pop_neg_total_sites')"></div></th>
-              <th class="col_negative_binomial">Negative <i>p</i>-value&nbsp;<div class="help" 
-                  onclick="help_popup(this, 'pop_negative_binomial')"></div></th>
               <th class="col_maxprob">Max Probability&nbsp;<div class="help" 
                   onclick="help_popup(this, 'pop_prob')"></div></th>
               <th class="col_problocation">Max Probability Location&nbsp;<div class="help" 
@@ -459,46 +522,7 @@
               sequences (<span id="matching_intersection_percentage">0</span>%).</h5>
                     <textarea id="matching_intersection_sequences" rows="10" cols="50" readonly></textarea>
                     </div>
-          <h4>Sort &amp; Filter</h4>
-          <div style="margin-top:10px;">
-            <h5>Sort</h5>
-            <div id="box_peak_sort">
-              <label for="peak_sort">Peaks: </label>
-              <select id="peak_sort">
-                <option value="0" selected><i>E</i>-value (also <i>p</i>-value)</option>
-                <option value="1">Matthew's Correlation Coefficient </option>
-                <option value="2">Region Center</option>
-                <option value="3">Region Width</option>
-                <option value="4">Region Matches</option>
-                <option value="5"><i>p</i>-value in Negative Dataset</option>
-                <option value="6">Region Matches in Negative Dataset</option>
-              </select>
-            </div>
-            <div>
-              <label for="motif_sort">Motifs: </label>
-              <select id="motif_sort">
-                <option value="0">ID</option>
-                <option value="1">Name</option>
-                <option value="2" selected><i>E</i>-value (also <i>p</i>-value)</option>
-                <option value="3">Matthew's Correlation Coefficient </option>
-                <option value="4">Region Center</option>
-                <option value="5">Region Width</option>
-                <option value="6">Region Matches</option>
-                <option value="7">Total Matches</option>
-                <option value="8">Max Probability</option>
-              </select>
-            </div>
-            <script>
-              if (!data['options']['mcc']) {
-                $('peak_sort')[1].style.display= 'none';
-                $('motif_sort')[3].style.display= 'none';
-              }
-              if (!data['options']['disc']) {
-                $('peak_sort')[5].style.display = 'none';
-                $('peak_sort')[6].style.display = 'none';
-              }
-            </script>
-          </div>
+          <h4>Filter &amp; Sort</h4>
           <h5>Filters&nbsp;<div style="margin-top:5px;" class="help" 
               onclick="help_popup(this, 'pop_filtering')" ></div></h5>
           <div id="filters">
@@ -550,10 +574,19 @@
               onclick="toggle_filter(this, 'filter_evalue')">
               <label for="filter_evalue"
                 onclick="enable_filter('filter_on_evalue', 'filter_evalue')"
-                ><i>E-value</i> &le;</label>
+                ><i>E</i>-value &le;</label>
               <input type="text" id="filter_evalue" value="1" size="7" 
               onkeypress="update_filter(event)" disabled>
             </div>
+            <div id='cb_filter_on_fisherpv' >
+              <input type="checkbox" id="filter_on_fisherpv" value="1" 
+              onclick="toggle_filter(this, 'filter_fisherpv')">
+              <label for="filter_fisherpv"
+                onclick="enable_filter('filter_on_fisherpv', 'filter_fisherpv')"
+                >Fisher <i>E</i>-value&le;</label>
+              <input type="text" id="filter_fisherpv" value="1" size="7" 
+              onkeypress="update_filter(event)" disabled>
+            </div>
             <div >
               <input type="checkbox" id="filter_on_binwidth" value="1" 
               onclick="toggle_filter(this, 'filter_binwidth')">
@@ -570,9 +603,26 @@
                 onclick="enable_filter('filter_on_negbintest', 'filter_negbintest')"
                 >Negative set <i>E</i>-value &ge;</label>
               <input type="text" id="filter_negbintest" value="1" size="7" 
-              min="1" onkeypress="num_keys(event); update_filter(event)" disabled>
+              onkeypress="update_filter(event)" disabled>
             </div>
           </div>
+          <div style="margin: 5px 0;">
+            <h5>Sort&nbsp;<div class="help"
+                onclick="help_popup(this, 'pop_sorting')"></div></h5>
+            <div>
+              <label for="motif_sort">Motifs:&nbsp;&nbsp; </label>
+              <select id="motif_sort"></select>
+            </div>
+            <div id="box_peak_sort">
+              <input type="checkbox" id="allow_peak_sort" value="1" 
+              onclick="toggle_filter(this, 'peak_sort')">
+              <label for="peak_sort" 
+                onclick="enable_filter('allow_peak_sort', 'peak_sort')"
+                >Regions: </label>
+		          <select id="peak_sort" disabled></select>
+            </div>
+            <script>populate_sort_lists();</script>
+          </div>
           <div>
             <input type="button" value="Update" onclick="make_CEM_table()">
           </div>
@@ -592,16 +642,21 @@
             onclick="toggle_column('hide_name')" checked>
             <label for="show_name">Show Name</label>
           </div>
-           <div >
+          <div >
             <input type="checkbox" id="show_evalue" value="1" 
             onclick="toggle_column('hide_evalue')" checked>
             <label for="show_evalue">Show <i>E</i>-value</label>
           </div>
           <div >
             <input type="checkbox" id="show_pvalue" value="1" 
-            onclick="toggle_column('hide_pvalue')" checked>
+            onclick="toggle_column('hide_pvalue')">
             <label for="show_pvalue">Show <i>p</i>-value</label>
           </div>
+          <div id='cb_show_fisherpv'>
+            <input type="checkbox" id="show_fisherpv" value="1" 
+            onclick="toggle_column('hide_fisherpv')" checked>
+            <label for="show_fisherpv">Show Fisher <i>E</i>-value</label>
+          </div>
           <div id='CB_show_MCC'>
             <input type="checkbox" id="show_MCC" value="1" 
             onclick="toggle_column('hide_MCC')">
@@ -619,14 +674,19 @@
           </div>
           <div >
             <input type="checkbox" id="show_bsites" value="1" 
-            onclick="toggle_column('hide_bsites')" checked>
+            onclick="toggle_column('hide_bsites')">
             <label for="show_bsites">Show Region Matches</label>
           </div>
           <div >
             <input type="checkbox" id="show_tsites" value="1" 
-            onclick="toggle_column('hide_tsites')" checked>
+            onclick="toggle_column('hide_tsites')">
             <label for="show_tsites">Show Total Matches</label>
           </div>
+          <div id='CB_show_negative_binomial'>
+            <input type="checkbox" id="show_negative_binomial" value="1" 
+            onclick="toggle_column('hide_negative_binomial')">
+            <label for="show_negative_binomial">Show Negative <i>p</i>-value</label>
+          </div>
           <div id='CB_show_negbsites'>
             <input type="checkbox" id="show_negbsites" value="1" 
             onclick="toggle_column('hide_negbsites')">
@@ -637,11 +697,6 @@
             onclick="toggle_column('hide_negtsites')">
             <label for="show_negtsites">Show Negative Total Matches</label>
           </div>
-          <div id='CB_show_negative_binomial'>
-            <input type="checkbox" id="show_negative_binomial" value="1" 
-            onclick="toggle_column('hide_negative_binomial')">
-            <label for="show_negative_binomial">Show Negative <i>p</i>-value</label>
-          </div>
           <div >
             <input type="checkbox" id="show_maxprob" value="1" 
             onclick="toggle_column('hide_maxprob')">
@@ -659,7 +714,7 @@
           </div>
           <div>
             <input type="checkbox" id="show_score" value="1" 
-            onclick="toggle_column('hide_score')" checked>
+            onclick="toggle_column('hide_score')">
             <label for="show_score">Show Score Threshold</label>
           </div>
         </div>
@@ -751,7 +806,7 @@
         <h5>Reference</h5>
         <span class="citation">
           Timothy L. Bailey and Philip Machanick, 
-          &quot;Inferring direct DNA binding from ChIP-seq&quot;, submitted.
+          &quot;Inferring direct DNA binding from ChIP-seq&quot;, <i>Nucleic Acids Research</i>, <b>40</b>:e128, 2012.
         </span>
         <div class="subsection">
           <a name="command" />
diff -r e77390759cae -r 61325860cd46 etc/centrimo_template.js
--- a/etc/centrimo_template.js	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/centrimo_template.js	Tue Jan 22 18:14:22 2013 +1000
@@ -17,6 +17,42 @@
 var intersect_seq_ids = [];
 var graph_metrics = new CentrimoGraphMetrics(null, 0, 0, 0, 0, 0, 0);
 
+var sort_table = {
+  "motif": [
+    {"name": "<i>E</i>-value", "fn": sort_motif_evalue, "priority": 1, "pair": "evalue"},
+    {"name": "Fisher <i>E</i>-value", "fn": sort_motif_fisherpv, "priority": 2, 
+      "show": data['options']['neg_sequences'], "pair": "fisherpv"},
+    {"name": "Region Center", "fn": sort_motif_center, "pair": "center"},
+    {"name": "Region Width", "fn": sort_motif_spread, "pair": "spread"},
+    {"name": "Region Matches", "fn": sort_motif_sites, "pair": "sites"},
+    {"name": "<i>p</i>-value (Neg Data)", "fn": sort_motif_neg_pvalue,
+      "show": data['options']['neg_sequences'], "pair": "neg_pvalue"},
+    {"name": "Region Matches in (Neg Data)", "fn": sort_motif_neg_sites, 
+      "show": data['options']['neg_sequences'], "pair": "neg_sites"},
+    {"name": "Matthew's Correlation Coefficient", "fn": sort_motif_mcc, 
+      "show": data['options']['mcc'], "pair": "mcc"},
+    {"name": "Total Matches", "fn": sort_motif_total_sites, "pair": "evalue"},
+    {"name": "Max Probability", "fn": sort_motif_probability, "pair": "evalue"},
+    {"name": "ID", "fn": sort_motif_id, "pair": "evalue"},
+    {"name": "Name", "fn": sort_motif_alt, "pair": "evalue"},
+  ],
+  "region": [
+    {"id": "evalue", "name": "<i>E</i>-value", "fn": sort_peak_evalue,
+      "priority": 1},
+    {"id": "fisherpv", "name": "Fisher <i>E</i>-value", "fn": sort_peak_fisherpv,
+      "priority": 2, "show": data['options']['neg_sequences']},
+    {"id": "center", "name": "Region Center", "fn": sort_peak_center},
+    {"id": "spread", "name": "Region Width", "fn": sort_peak_spread},
+    {"id": "sites", "name": "Region Matches", "fn": sort_peak_sites},
+    {"id": "neg_pvalue", "name": "<i>p</i>-value (Neg Data)",
+      "fn": sort_peak_neg_pvalue, "show": data['options']['neg_sequences']},
+    {"id": "neg_sites", "name": "Region Matches in (Neg Data)",
+      "fn": sort_peak_neg_sites, "show": data['options']['neg_sequences']},
+    {"id": "mcc", "name": "Matthew's Correlation Coefficient",
+      "fn": sort_peak_mcc, "show": data['options']['mcc']}
+  ],
+};
+
 pre_load_setup();
 
 
@@ -87,7 +123,11 @@
   }
   s_count = 0;
   motifs = data["motifs"];
-  motifs.sort(sort_motif_evalue);
+  if (data["options"]["neg_sequences"]) {
+    motifs.sort(sort_motif_fisherpv);
+  } else {
+    motifs.sort(sort_motif_evalue);
+  }
   // put a copy of the best evalue in the motif
   for (i = 0; i < motifs.length; i++) {
     motif = motifs[i];
@@ -218,6 +258,11 @@
 }
 
 /*
+ * toggle_lock
+ *
+ */
+
+/*
  * clear_selection
  *
  * Called when the user clicks the X in the
@@ -698,7 +743,7 @@
 /*
  * first_load_setup
  *
- * Setup state that is dependant on everything having been loaded already.
+ * Setup state that is dependent on everything having been loaded already.
  * On browsers which cache state this is only run once.
  */
 function first_load_setup() {
@@ -714,14 +759,21 @@
     toggle_class($('motifs'), 'hide_OEbins', true);
   }
   if (!data['options']['neg_sequences']) {
+    $('show_fisherpv').checked = false;
+    $('show_negative_binomial').checked = false;
     // no negative sites, so hide negative bin sites and total
+    $('CB_show_plot_negative').style.display= 'none';
+    $('plot_negative').value = 0;
     $('CB_show_negbsites').style.display= 'none';
     $('CB_show_negtsites').style.display= 'none';
-  }
-  if (!data['options']['disc']) {
-    // negative data set was not used with a discriminative search
     $('CB_show_negative_binomial').style.display='none';
     $('CB_filter_on_negbintest').style.display='none';
+    $('cb_show_fisherpv').style.display = 'none';
+    $('cb_filter_on_fisherpv').style.display = 'none';
+  }
+  if (data['options']['disc']) {
+    // negative data set was not used with a discriminative search
+    $('cb_show_fisherpv').style.display = 'none';
   }
   if (!data['options']['mcc']) {
     $('CB_show_MCC').style.display='none';
@@ -738,7 +790,7 @@
 /*
  * post_load_setup
  *
- * Setup state that is dependant on everything having been loaded already.
+ * Setup state that is dependent on everything having been loaded already.
  */
 function post_load_setup() {
   "use strict";
@@ -752,6 +804,7 @@
   toggle_class(tbl, "hide_db", !$("show_db").checked);
   toggle_class(tbl, "hide_id", !$("show_id").checked);
   toggle_class(tbl, "hide_name", !$("show_name").checked);
+  toggle_class(tbl, "hide_fisherpv", !$("show_fisherpv").checked);
   toggle_class(tbl, "hide_evalue", !$("show_evalue").checked);
   toggle_class(tbl, "hide_pvalue", !$("show_pvalue").checked);
   toggle_class(tbl, "hide_MCC", !$("show_MCC").checked);
@@ -807,6 +860,45 @@
 }
 
 /*
+ * sort_motif_fisherpv
+ *
+ * Takes 2 motif objects and compares them based on the Fisher pvalue
+ */
+function sort_motif_fisherpv(m1, m2) {
+  var diff, p1, p2;
+  p1 = m1['peaks'][0];
+  p2 = m2['peaks'][0];
+  diff = p1['fisher_log_adj_pvalue'] - p2['fisher_log_adj_pvalue'];
+  if (diff != 0) return diff;
+  diff = p2['pos_sites'] - p1['pos_sites'];
+  if (diff != 0) return diff;
+  return sort_motif_evalue(m1, m2);
+}
+
+function sort_motif_neg_pvalue(m1, m2) {
+  var diff, p1, p2;
+  //return sort_motif_evalue(m1, m2);
+  p1 = m1['peaks'][0];
+  p2 = m2['peaks'][0];
+  diff = p1['neg_log_adj_pvalue'] - p2['neg_log_adj_pvalue'];
+  if (diff != 0) return diff;
+  diff = p2['neg_sites'] - p1['neg_sites'];
+  if (diff != 0) return diff;
+  return sort_motif_evalue(m1, m2);
+}
+
+function sort_motif_neg_sites(m1, m2) {
+  var diff, p1, p2;
+  p1 = m1['peaks'][0];
+  p2 = m2['peaks'][0];
+  diff = p1['neg_sites'] - p2['neg_sites'];
+  if (diff != 0) return diff;
+  diff = p1['neg_log_adj_pvalue'] - p2['neg_log_adj_pvalue'];
+  if (diff != 0) return diff;
+  return sort_motif_evalue(m1, m2);
+}
+
+/*
  * sort_motif_evalue
  *
  * Takes 2 motif objects and compares them based on the log_adj_pvalue.
@@ -845,7 +937,7 @@
  */
 function sort_motif_probability(m1, m2) {
   var diff;
-  diff = 0; //FIXME //m2['max_prob'] - m1['max_prob'];
+  diff = m2['max_prob'] - m1['max_prob'];
   if (diff != 0) return diff;
   return sort_motif_evalue(m1, m2);
 }
@@ -859,7 +951,7 @@
   var diff, p1, p2;
   p1 = m1['peaks'][0];
   p2 = m2['peaks'][0];
-  diff = p1['sites'] - p2['sites'];
+  diff = p2['sites'] - p1['sites'];
   if (diff != 0) return diff;
   return sort_motif_evalue(m1, m2);
 }
@@ -867,12 +959,14 @@
 /*
  * sort_motif_center
  *
- * Takes 2 motif objects and compares them based on the bin location.
+ * Takes 2 motif objects and compares them based on the abs(bin location).
  */
 function sort_motif_center(m1, m2) {
   var diff, p1, p2;
   p1 = m1['peaks'][0];
   p2 = m2['peaks'][0];
+  diff = Math.abs(p1['center']) - Math.abs(p2['center']);
+  if (diff != 0) return diff;
   diff = p1['center'] - p2['center'];
   if (diff != 0) return diff;
   return sort_motif_evalue(m1, m2);
@@ -913,28 +1007,25 @@
  */
 function motif_sort_cmp(index) {
   "use strict";
-  switch (index) {
-    case 0:
-      return sort_motif_id;
-    case 1:
-      return sort_motif_alt;
-    case 2:
-      return sort_motif_evalue;
-    case 3:
-      return sort_motif_mcc;
-    case 4:
-      return sort_motif_center;
-    case 5:
-      return sort_motif_spread;
-    case 6:
-      return sort_motif_sites;
-    case 7:
-      return sort_motif_total_sites;
-    case 8:
-      return sort_motif_probability;
-    default:
-      return sort_motif_evalue;
+  if (index > 0 && index < sort_table["motif"].length) {
+    return sort_table["motif"][index]["fn"];
   }
+  return sort_motif_evalue;
+}
+
+/*
+ * sort_peak_fisherpv
+ *
+ * Takes 2 peak objects and compares them based on the Fisher pvalue
+ */
+function sort_peak_fisherpv(p1, p2) {
+  var diff;
+  if (p1['filtered'] != p2['filtered']) return (p1['filtered'] ? 1 : -1);
+  diff = p1['fisher_log_adj_pvalue'] - p2['fisher_log_adj_pvalue'];
+  if (diff != 0) return diff;
+  diff = p2['pos_sites'] - p1['pos_sites'];
+  if (diff != 0) return diff;
+  return sort_peak_evalue(p1, p2);
 }
 
 function sort_peak_evalue(p1, p2) {
@@ -957,6 +1048,8 @@
 
 function sort_peak_center(p1, p2) {
   if (p1['filtered'] != p2['filtered']) return (p1['filtered'] ? 1 : -1);
+  diff = Math.abs(p1['center']) - Math.abs(p2['center']); 
+  if (diff != 0) return diff;
   return p1['center'] - p2['center']; 
 }
 
@@ -973,7 +1066,7 @@
 function sort_peak_sites(p1, p2) {
   var diff;
   if (p1['filtered'] != p2['filtered']) return (p1['filtered'] ? 1 : -1);
-  diff = p1['sites'] - p2['sites'];
+  diff = p2['sites'] - p1['sites'];
   if (diff != 0) return diff;
   return sort_peak_evalue(p1, p2);
 }
@@ -981,9 +1074,7 @@
 function sort_peak_neg_pvalue(p1, p2) {
   var diff;
   if (p1['filtered'] != p2['filtered']) return (p1['filtered'] ? 1 : -1);
-  // sort largest to smallest as we want peaks that aren't
-  // enriched in the negative set
-  diff = p2['neg_log_adj_pvalue'] - p2['neg_log_adj_pvalue'];
+  diff = p1['neg_log_adj_pvalue'] - p2['neg_log_adj_pvalue'];
   if (diff != 0) return diff;
   diff = p2['neg_sites'] - p1['neg_sites'];
   if (diff != 0) return diff;
@@ -993,33 +1084,19 @@
 function sort_peak_neg_sites(p1, p2) {
   var diff;
   if (p1['filtered'] != p2['filtered']) return (p1['filtered'] ? 1 : -1);
-  diff = p2['neg_sites'] - p1['neg_sites'];
+  diff = p1['neg_sites'] - p2['neg_sites'];
   if (diff != 0) return diff;
-  diff = p2['neg_log_adj_pvalue'] - p2['neg_log_adj_pvalue'];
+  diff = p1['neg_log_adj_pvalue'] - p2['neg_log_adj_pvalue'];
   if (diff != 0) return diff;
   return sort_peak_evalue(p1, p2);
 }
 
 function peak_sort_cmp(index) {
   "use strict";
-  switch (index) {
-    case 0:
-      return sort_peak_evalue;
-    case 1:
-      return sort_peak_mcc;
-    case 2:
-      return sort_peak_center;
-    case 3:
-      return sort_peak_spread;
-    case 4:
-      return sort_peak_sites;
-    case 5:
-      return sort_peak_neg_pvalue;
-    case 6:
-      return sort_peak_neg_sites;
-    default:
-      return sort_peak_evalue;
+  if (index > 0 && index < sort_table["region"].length) {
+    return sort_table["region"][index]["fn"];
   }
+  return sort_peak_evalue;
 }
 
 /*
@@ -1027,7 +1104,7 @@
  *
  * Converts a log value into scientific notation.
  */
-function log2str(log_val, precision) {
+function log2str(log_val, precision, max) {
   var log10_val, e, m;
   if (log_val < 0) {
     log10_val = log_val / Math.log(10);
@@ -1038,8 +1115,10 @@
       e += 1;
     }
     return "" + m.toFixed(precision) + "e" + e;
+  } else if (typeof max !== "number" || Math.exp(log_val) < max) {
+    return Math.exp(log_val).toFixed(precision);
   } else {
-    return Math.exp(log_val).toFixed(precision);
+    return ">"+max;
   }
 }
 
@@ -1080,8 +1159,8 @@
  *
  * Gets the E-value of the motif in string form.
  */
-function evstr(peak) {
-  return log2str(peak['log_adj_pvalue'] + Math.log(data['tested']), 1);
+function evstr(peak, type) {
+  return log2str(peak[type] + Math.log(data['tested']), 1);
 }
 
 /*
@@ -1137,8 +1216,16 @@
   add_text_cell(row, motif_dbs[motif['db']]['name'], 'col_db');
   add_cell(row, make_link(motif['id'], motif['url']), 'col_id');
   add_text_cell(row, motif['alt'], "col_name");
-  add_text_cell(row, evstr(peak), 'col_evalue');
+  add_text_cell(row, evstr(peak, 'log_adj_pvalue'), 'col_evalue');
+  if (data['options']['neg_sequences']) {
+    add_text_cell(row, evstr(peak, 'fisher_log_adj_pvalue'), "col_fisherpv");
+  }
   add_text_cell(row, pvstr(peak), 'col_pvalue');
+  if (data['options']['neg_sequences']) {
+    add_text_cell(row, log2str(peak['neg_log_adj_pvalue'],1), "col_negative_binomial");
+  } else {
+    add_text_cell(row, '', "col_negative_binomial");
+  }
   if (data['options']['mcc']) {
     add_text_cell(row, peak['mcc'].toFixed(3), "col_MCC");
   } else {
@@ -1155,11 +1242,6 @@
     add_text_cell(row, '', "col_negbsites")
     add_text_cell(row, '', "col_negtsites");
   }
-  if (data['options']['disc']) {
-    add_text_cell(row, log2str(peak['neg_log_adj_pvalue'],1), "col_negative_binomial");
-  } else {
-    add_text_cell(row, '', "col_negative_binomial");
-  }
   add_text_cell(row, motif["max_prob"].toFixed(4), "col_maxprob");
   add_text_cell(row, motif["max_prob_loc"], "col_problocation");
   add_text_cell(row, motif['n_tested'], "col_nbinstested");
@@ -1185,8 +1267,16 @@
   add_text_cell(row, '', 'col_db');
   add_text_cell(row, '', 'col_id');
   add_text_cell(row, '', 'col_name');
-  add_text_cell(row, evstr(peak), 'col_evalue');
+  add_text_cell(row, evstr(peak, 'log_adj_pvalue'), 'col_evalue');
+  if (data['options']['neg_sequences']) {
+    add_text_cell(row, evstr(peak, 'fisher_log_adj_pvalue'), "col_fisherpv");
+  }
   add_text_cell(row, pvstr(peak), 'col_pvalue');
+  if (data['options']['neg_sequences']) {
+    add_text_cell(row, log2str(peak['neg_log_adj_pvalue'],1), "col_negative_binomial");
+  } else {
+    add_text_cell(row, '', "col_negative_binomial");
+  }
   if (data['options']['mcc']) {
     add_text_cell(row, peak['mcc'].toFixed(3), "col_MCC");
   } else {
@@ -1202,11 +1292,6 @@
     add_text_cell(row, '', "col_negbsites")
   }
   add_text_cell(row, '', "col_negtsites");
-  if (data['options']['disc']) {
-    add_text_cell(row, log2str(peak['neg_log_adj_pvalue'],1), "col_negative_binomial");
-  } else {
-    add_text_cell(row, '', "col_negative_binomial");
-  }
   add_text_cell(row, '', "col_maxprob");
   add_text_cell(row, '', "col_problocation");
   add_text_cell(row, '', "col_nbinstested");
@@ -1277,7 +1362,7 @@
   for (i = 0; i < s_motifs.length; i++) {
     if (s_motifs[i] == null) continue;
     for (j =0; j < filtered.length; j++) {
-      if (filtered[j]['id'] === s_motifs[i]['id']) {
+      if (filtered[j] === s_motifs[i]) {
         continue outer_loop;
       }
     }
@@ -1346,7 +1431,7 @@
   filter["on_id"] = $("filter_on_id").checked;
   id_pat = $("filter_id").value;
   try {
-    filter["id"] = new RegExp(id_pat);
+    filter["id"] = new RegExp(id_pat, "i");
     $("filter_id").className = "";
   } catch (err) {
     $("filter_id").className = "error";
@@ -1356,7 +1441,7 @@
   filter["on_alt"] = $("filter_on_alt").checked;
   alt_pat = $("filter_alt").value;
   try {
-    filter["alt"] = new RegExp(alt_pat);
+    filter["alt"] = new RegExp(alt_pat, "i");
     $("filter_alt").className = "";
   } catch (err) {
     filter["on_alt"] = false;
@@ -1371,6 +1456,15 @@
     filter["on_pvalue"] = false;
     $("filter_evalue").className = "error";
   }
+  // get the Fisher pv filter
+  filter["on_fisherpv"] = $("filter_on_fisherpv").checked;
+  if ((log_fisherpv_max = str2log($("filter_fisherpv").value)) != null) {
+    filter["log_fisherpv"] = log_fisherpv_max - Math.log(data['tested']);
+    $("filter_fisherpv").className = "";
+  } else {
+    filter["on_fisherpv"] = false;
+    $("filter_fisherpv").className = "error";
+  }
   // get the spread filter
   filter["on_spread"] = $("filter_on_binwidth").checked;
   spread = parseInt($("filter_binwidth").value);
@@ -1382,10 +1476,10 @@
     $("filter_binwidth").className = "";
   }
   // get the negative binomial test filter
-  filter["on_neg"] = data['options']['disc'] && $("filter_on_negbintest").checked;
+  filter["on_neg"] = data['options']['neg_sequences'] && $("filter_on_negbintest").checked;
   if ((neg_log_pvalue_min = str2log($("filter_negbintest").value)) != null) {
     $("filter_negbintest").className = "";
-    filter["neg_log_pvalue"] = neg_log_pvalue_min;
+    filter["neg_log_pvalue"] = neg_log_pvalue_min - Math.log(data['tested']);
   } else {
     filter["on_neg"] = false;
     $("filter_negbintest").className = "error";
@@ -1411,6 +1505,7 @@
 }
 
 function filter_peak(filter, peak) {
+  if (filter["on_fisherpv"] && peak["fisher_adj_pvalue"] > filter["log_fisherpv"]) return true;
   if (filter["on_pvalue"] && peak["log_adj_pvalue"] > filter["log_pvalue"]) return true;
   if (filter["on_spread"] && peak["spread"] > filter["spread"]) return true;
   if (filter["on_neg"] && peak["neg_log_adj_pvalue"] < filter["neg_log_pvalue"]) return true;
@@ -1445,7 +1540,7 @@
   for (var i=0; i<tbody.rows.length;i++) { // For each motif
     if (tbody.rows[i].className==param.className) {    // For each sub-peaks
       bin_number++;
-      if (must_be_display(param.className,bin_number)==false || NValue=="\u21A5") { // If it has to be hiden or arrow was up
+      if (must_be_display(param.className,bin_number)==false || NValue=="\u21A5") { // If it has to be hidden or arrow was up
         tbody.rows[i].style.display="none";    // Hide it
       }
       else {
@@ -1472,7 +1567,7 @@
  */
 function must_be_display(ID, bin_number) {
   "use strict";
-  var motifs, i, motif, peak, log_pvalue_max, log_evalue_max;
+  var motifs, i, motif, peak, log_pvalue_max, log_evalue_max, log_pvalue_min;
   motifs = data['motifs'];
   for (i = 0; i < motifs.length; i++) {
     motif = motifs[i];
@@ -1486,6 +1581,20 @@
         }
         if (log_pvalue_max < peak['log_adj_pvalue']) return false; 
       }
+      if ($("filter_on_fisherpv").checked) {
+        if ((log_evalue_max = str2log($("filter_fisherpv").value)) != null) {
+          log_pvalue_max = log_evalue_max - Math.log(data['tested']);
+        } else {
+          log_pvalue_max = 0;
+        }
+        if (log_pvalue_max < peak['fisher_log_adj_pv']) return false; 
+      }
+      if ($("filter_on_negbintest").checked) {
+        if ((log_pvalue_max = str2log($("filter_negbintest").value)) == null) {
+          log_pvalue_min = Math.log(data['tested']);
+        }
+        if (log_pvalue_min > peak['neg_log_adj_pvalue']) return false; 
+      }
       if ($("filter_on_binwidth").checked && 
           parseInt($("filter_binwidth").value) > peak['spread']) {
             return false;
@@ -1576,7 +1685,7 @@
 
 function make_MP_graph2(ctx, width, height) {
   "use strict";
-  var windo, type, legend, motifs, rset, i, motif;
+  var windo, type, legend, plot_negative, motifs, rset, i, motif;
   var name, sig, colour, weights, graph, peak_highlight;
   // get the graph settings
   windo = parseInt($("windo").value);
@@ -1586,6 +1695,7 @@
   }
   type = parseInt($("plot_type").value);
   legend = parseInt($("legend").value);
+  plot_negative = parseInt($("plot_negative").value);
   // get the selected motifs
   motifs = [];
   for (i = 0; i < s_motifs.length; i++) {
@@ -1601,8 +1711,13 @@
     if (motif["alt"]) name = motif["alt"] + " " + motif["id"];
     sig = "p=" + log2str(motif["best_log_adj_pvalue"], 1);
     colour = palate[motif["colouri"]];
-    rset.add(name, sig, colour, motif["len"], motif["total_sites"],
+    if (plot_negative) {
+      rset.add(name, sig, colour, motif["len"], motif["total_sites"],
         motif["sites"], motif["neg_total_sites"], motif["neg_sites"]);
+    } else {
+      rset.add(name, sig, colour, motif["len"], motif["total_sites"],
+        motif["sites"], 0, 0);
+    }
   }
   // get the smoothing weights
   weights = (type == 1 ? triangular_weights(windo) : uniform_weights(windo));
@@ -1614,3 +1729,67 @@
   peak_highlight.style.height = (graph_metrics.bottom_edge - graph_metrics.top_edge) + "px";
 }
 
+function sync_sort_selection () {
+  "use strict";
+  var i, mapper, motif_sort, region_sort;
+  motif_sort = $("motif_sort");
+  region_sort = $("peak_sort");
+  if (typeof sync_sort_selection.mapper === "undefined") {
+    var id2idx;
+    // first map region id to index
+    id2idx = {};
+    for (i = 0; i < region_sort.options.length; i++) {
+      id2idx[sort_table["region"][parseInt(region_sort.options[i].value, 10)]["id"]] = i;
+    }
+    // now generate a mapping of index in motif sort to index in region sort
+    mapper = [];
+    for (i = 0; i < motif_sort.options.length; i++) {
+      mapper[i] = id2idx[sort_table["motif"][parseInt(motif_sort.options[i].value, 10)]["pair"]];
+    }
+    sync_sort_selection.mapper = mapper;
+  } else {
+    mapper = sync_sort_selection.mapper;
+  }
+  if (!$('allow_peak_sort').checked) {
+    region_sort.selectedIndex = mapper[motif_sort.selectedIndex];
+  }
+}
+
+function populate_sort_list (sellist, items) {
+  var i, j, item, opt, priority, selected;
+  priority = 0;
+  selected = 0;
+  for (i = 0, j = 0; i < items.length; i++) {
+    item = items[i];
+    if (typeof item["show"] === 'undefined' || item["show"]) {
+      opt = document.createElement("option");
+      opt.innerHTML = item["name"];
+      opt.value = i;
+      sellist.add(opt, null);
+      if (typeof item["priority"] !== 'undefined' && item["priority"] > priority) {
+        selected = j;
+        priority = item["priority"];
+      }
+      j++;
+    }
+  }
+  sellist.selectedIndex = selected;
+}
+
+function populate_sort_lists() {
+  "use strict";
+  var i, motif_sort, region_sort, motif_sort_list, region_sort_list;
+  motif_sort = $("motif_sort");
+  region_sort = $("peak_sort");
+  try {motif_sort.removeEventListener("click", sync_sort_selection, false);} catch (e) {}
+  try {motif_sort.removeEventListener("change", sync_sort_selection, false);} catch (e) {}
+  for (i = motif_sort.options.length-1; i >= 0; i--) motif_sort.remove(i);
+  for (i = region_sort.options.length-1; i >= 0; i--) region_sort.remove(i);
+  motif_sort_list = sort_table["motif"];
+  region_sort_list = sort_table["region"];
+  populate_sort_list(motif_sort, motif_sort_list);
+  populate_sort_list(region_sort, region_sort_list);
+  sync_sort_selection();
+  motif_sort.addEventListener("click", sync_sort_selection, false);
+  motif_sort.addEventListener("change", sync_sort_selection, false);
+}
diff -r e77390759cae -r 61325860cd46 etc/dreme_config.xml.in
--- a/etc/dreme_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/dreme_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="DREME_@SERVICE_VERSION@">
+  <metadata appName="DREME @SERVICE_VERSION@">
     <usage>DREME: Discovers regular expression motifs</usage>
     <info>
     <![CDATA[
diff -r e77390759cae -r 61325860cd46 etc/fimo_config.xml.in
--- a/etc/fimo_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/fimo_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="FIMO_@SERVICE_VERSION@">
+  <metadata appName="FIMO @SERVICE_VERSION@">
     <usage>FIMO: Search sequences for individual motif sites</usage>
     <info xsd:type="xsd:string">
     <![CDATA[
diff -r e77390759cae -r 61325860cd46 etc/glam2_config.xml.in
--- a/etc/glam2_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/glam2_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="GLAM2_@SERVICE_VERSION@">
+  <metadata appName="GLAM2 @SERVICE_VERSION@">
     <usage>GLAM2: Find gapped local alignment motifs</usage>
     <info xsd:type="xsd:string">
     <![CDATA[
diff -r e77390759cae -r 61325860cd46 etc/glam2scan_config.xml.in
--- a/etc/glam2scan_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/glam2scan_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="GLAM2SCAN_@SERVICE_VERSION@">
+  <metadata appName="GLAM2SCAN @SERVICE_VERSION@">
     <usage>GLAM2SCAN: Find GLAM2 motifs in sequences</usage>
     <info xsd:type="xsd:string">
     <![CDATA[
diff -r e77390759cae -r 61325860cd46 etc/gomo_config.xml.in
--- a/etc/gomo_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/gomo_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="GOMO_@SERVICE_VERSION@">
+  <metadata appName="GOMO @SERVICE_VERSION@">
     <usage>GOMO: Find Gene Ontology roles for motifs</usage>
     <info xsd:type="xsd:string">
     <![CDATA[
diff -r d599bef20e3c etc/gomo-to-html.xsl
--- a/etc/gomo-to-html.xsl	Tue Jan 22 21:34:22 2013 -0800
+++ b/etc/gomo-to-html.xsl	Wed Jan 23 16:26:52 2013 +1000
@@ -105,7 +105,7 @@
   
   <xsl:template name="top">
     <div class="pad1">
-      <h1><img src="{$site_url}/images/gomo_logo.png" alt="GOMO" /></h1>
+      <h1><img src="{$site_url}/doc/images/gomo_logo.png" alt="GOMO" /></h1>
       <p>
         For further information on how to interpret these results or to get a 
         copy of the MEME software please access<a href="http://meme.sdsc.edu">
diff -r e77390759cae -r 61325860cd46 etc/mast_config.xml.in
--- a/etc/mast_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/mast_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="MAST_@SERVICE_VERSION@">
+  <metadata appName="MAST @SERVICE_VERSION@">
     <usage>MAST: Search for groups of motifs in sequence databases</usage>
     <info xsd:type="xsd:string">
     <![CDATA[    
diff -r e77390759cae -r 61325860cd46 etc/mcast_config.xml.in
--- a/etc/mcast_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/mcast_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="MCAST_@SERVICE_VERSION@">
+  <metadata appName="MCAST @SERVICE_VERSION@">
     <usage>MCAST: Find clusters of motifs</usage>
     <info xsd:type="xsd:string">
     <![CDATA[
diff -r e77390759cae -r 61325860cd46 etc/meme-chip_config.xml.in
--- a/etc/meme-chip_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/meme-chip_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,6 +1,6 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="MEMECHIP_@SERVICE_VERSION@">
-    <usage>MEME-ChIP: Run MEME, DREME, TOMTOM and some other MEME Suite programs on ChIP-seq data</usage>
+  <metadata appName="MEMECHIP @SERVICE_VERSION@">
+    <usage>MEMECHIP: Run MEME, DREME, TOMTOM and some other MEME Suite programs on ChIP-seq data</usage>
     <info xsd:type="xsd:string">
     <![CDATA[
     meme-chip_webservice [options] <sequences file> <motif databases>
@@ -25,9 +25,11 @@
         -dreme-m <num>              maximum number of motifs to find
 
       CentriMo Specific Options:
-        -centrimo-score <num>       minimum site score
-        -centrimo-maxwin <num>      maximum central enrichment window
+        -centrimo-local             compute enrichment of all regions (not only central)
+        -centrimo-score <num>       minimum match score
+        -centrimo-maxreg <num>      maximum central enrichment region
         -centrimo-ethresh <num>     threshold for reporting enrichment
+        -centrimo-noseq             don't store sequence ids in output
 
       Motif Databases
         The motif databases may be specified as a pattern using * as a wildcard.
@@ -49,6 +51,18 @@
           <default>false</default>
           <textDesc>MEME only looks for palindromes</textDesc>
         </flag>
+        <flag>
+          <id>centrimo-local</id>
+          <tag>-centrimo-local</tag>
+          <default>false</default>
+          <textDesc>CentriMo tests all regions</textDesc>
+        </flag>
+        <flag>
+          <id>centrimo-noseq</id>
+          <tag>-centrimo-noseq</tag>
+          <default>false</default>
+          <textDesc>CentriMo does not include sequence list</textDesc>
+        </flag>
       </flags>
       <taggedParams>
         <separator> </separator>
@@ -140,12 +154,12 @@
           <textDesc>CentriMo minimum site score</textDesc>
         </param>
         <param>
-          <id>centrimo-maxwin</id>
-          <tag>-centrimo-maxwin</tag>
+          <id>centrimo-maxreg</id>
+          <tag>-centrimo-maxreg</tag>
           <paramType>INT</paramType>
           <default>200</default>
           <required>false</required>
-          <textDesc>Maximum central enrichment window size</textDesc>
+          <textDesc>Maximum enrichment region size</textDesc>
         </param>
         <param>
           <id>centrimo-ethresh</id>
@@ -170,43 +184,6 @@
           <textDesc>Motif Databases Pattern</textDesc>
         </param>
       </untaggedParams>
-      <groups>
-        <group>
-          <name>sequence_file</name>
-          <elements>sequences meme-norevcomp</elements>
-          <textDesc>Sequences</textDesc>
-        </group>
-        <group>
-          <name>motif_width</name>
-          <elements>meme-minw meme-maxw</elements>
-          <textDesc>MEME Motif Width</textDesc>
-        </group>
-        <group>
-          <name>motif_sites</name>
-          <elements>meme-mod meme-minsites meme-maxsites</elements>
-          <textDesc>MEME Motif Sites</textDesc>
-        </group>
-        <group>
-          <name>motif_options</name>
-          <elements>meme-nmotifs meme-pal</elements>
-          <textDesc>MEME Motif Options</textDesc>
-        </group>
-        <group>
-          <name>optional_files</name>
-          <elements>bfile</elements>
-          <textDesc>Optional Files</textDesc>
-        </group>
-        <group>
-          <name>motif_dbs</name>
-          <elements>dbs</elements>
-          <textDesc>Motif Database</textDesc>
-        </group>
-        <group>
-          <name>programs</name>
-          <elements>run-mast run-ama</elements>
-          <textDesc>Optional Programs</textDesc>
-        </group>
-      </groups>
     </types>
   </metadata>
   <binaryLocation>@MEMECHIP_SERVICE@</binaryLocation>
diff -r 5863bee1d071 -r 8041c82f059e etc/meme-chip_template.js
--- a/etc/meme-chip_template.js	Fri Dec 07 10:34:33 2012 +1000
+++ b/etc/meme-chip_template.js	Thu Jan 31 12:04:26 2013 +1000
@@ -256,7 +256,7 @@
     tbl.appendChild(thead);
     var rhead = thead.insertRow(thead.rows.length);
     add_text_header_cell(rhead, "Motif Found");
-    add_text_header_cell(rhead, "Discovery/Enrichment Program", "pop_source");
+    add_text_header_cell(rhead, "Discovery/\u200BEnrichment Program", "pop_source");
     add_text_header_cell(rhead, "E-value", "pop_ev");
     add_text_header_cell(rhead, "Known or Similar Motifs", "pop_tomtom", "col_known_motifs");
     add_text_header_cell(rhead, "Distribution", "pop_centrimo", "col_distribution");
diff -r e77390759cae -r 61325860cd46 etc/meme_config.xml.in
--- a/etc/meme_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/meme_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,5 +1,5 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="MEME_@SERVICE_VERSION@">
+  <metadata appName="MEME @SERVICE_VERSION@">
     <usage>MEME: Discovers motifs</usage>
     <info>
     <![CDATA[
diff -r e77390759cae -r 61325860cd46 etc/spamo_config.xml.in
--- a/etc/spamo_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/spamo_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,6 +1,6 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="SPAMO_@SERVICE_VERSION@">
-    <usage>SpaMo: Find co-factor motifs by looking for motifs which appear at significant spacings to a primary motif</usage>
+  <metadata appName="SPAMO @SERVICE_VERSION@">
+    <usage>SPAMO: Find co-factor motifs by looking for motifs which appear at significant spacings to a primary motif</usage>
     <info>
     <![CDATA[
     spamo_webservice [options] <sequences file> <primary motif> <secondary db patterns>
diff -r e77390759cae -r 61325860cd46 etc/tomtom_config.xml.in
--- a/etc/tomtom_config.xml.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/etc/tomtom_config.xml.in	Tue Jan 22 18:14:22 2013 +1000
@@ -1,6 +1,6 @@
 <appConfig xmlns="http://nbcr.sdsc.edu/opal/types" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
-  <metadata appName="TOMTOM_@SERVICE_VERSION@">
-    <usage>Tomtom: Search for similar motifs in motif databases</usage>
+  <metadata appName="TOMTOM @SERVICE_VERSION@">
+    <usage>TOMTOM: Search for similar motifs in motif databases</usage>
     <info>
     <![CDATA[
     tomtom_webservice [options] <query motifs> <motif databases>
diff -r e77390759cae -r 61325860cd46 scripts/JsonWr.pm
--- a/scripts/JsonWr.pm	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/JsonWr.pm	Tue Jan 22 18:14:22 2013 +1000
@@ -318,8 +318,13 @@
       $storage .= "\\\\";
     } elsif ($letter eq '/') {
       $storage .= "\\/";
-    } elsif ($num >= 0 && $num <= 0x1F || $num >= 0x7F && $num <= 0x9F) {
+    } elsif ($num >= 0 && $num <= 0x1F || $num >= 0x7F && $num <= 0x9F ||
+      $num == 0x2028 || $num == 0x2029) {
       # control character, so encode
+      # Note that techinically U+2028 and U+2029 are valid JSON but they are
+      # not valid Javascript as they encode 'LINE SEPARATOR' (U+2028) and
+      # 'PARAGRAPH SEPARATOR' (U+2029) which are treated by Javascript as
+      # newline characters and are hence not valid in strings.
       if ($num == 8) { #backspace
         $storage .= "\\b";
       } elsif ($num == 9) { #tab
diff -r e77390759cae -r 61325860cd46 scripts/centrimo_webservice.pl.in
--- a/scripts/centrimo_webservice.pl.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/centrimo_webservice.pl.in	Tue Jan 22 18:14:22 2013 +1000
@@ -10,14 +10,13 @@
   Options:
     -local            compute the enrichment of all regions; 
                        default: central regions only
-    -discr            use the Fisher exact test instead of the Binomial
-                       function; requires the -neg <file> sequences
     -score <score>    minimum score counted as hit
     -optsc            search for optimized score above the threshold given by
                        '-score' argument. Slow computation due to multiple tests
     -ethresh <evalue> minimum E-value to report
     -maxreg <region>  maximum region size to test
     -neg <file>       plot a negative set of sequences against the default set
+                      and test each window with the Fisher Exact Test
     -upmotifs <file>  uploaded motifs
     -bfile <file>     background file (0-order)
     -norc             don't scan with the reverse complement motif
@@ -83,7 +82,6 @@
 my $ethresh;
 my $maxreg;
 my $local = 0; #FALSE
-my $discr = 0; #FALSE
 my $optsc = 0; #FALSE
 my $flip = 0; #FALSE
 my $norc = 0; #FALSE
@@ -102,7 +100,6 @@
 # parse options
 $opts_ok = GetOptions(
   'local' => \$local,
-  'discr' => \$discr,
   'score=f' => \$score,
   'optsc' => \$optsc,
   'ethresh=f' => \$ethresh,
@@ -127,11 +124,6 @@
 }
 close($err_tmp);
 
-# discriminative mode requres the negative sequences
-if ($discr && !defined($neg_sequences)) {
-  push(@arg_errors, "Discriminative mode requires negative sequences.\n");
-}
-
 # remove any path from the files to ensure they are in this directory
 unless (defined($sequences)) {
   push(@arg_errors, "No sequences provided.");
@@ -274,7 +266,6 @@
 push(@centrimo_args, '--noseq') if ($noseq);
 push(@centrimo_args, '--norc') if ($norc);
 push(@centrimo_args, '--local') if ($local);
-push(@centrimo_args, '--disc') if ($discr);
 push(@centrimo_args, '--optimize_score') if ($optsc);
 push(@centrimo_args, '--score', $score) if (defined($score));
 push(@centrimo_args, '--ethresh', $ethresh) if (defined($ethresh));
diff -r 5863bee1d071 -r 8041c82f059e scripts/chen2meme.pl.in
--- a/scripts/chen2meme.pl.in	Fri Dec 07 10:34:33 2012 +1000
+++ b/scripts/chen2meme.pl.in	Thu Jan 31 12:04:26 2013 +1000
@@ -53,11 +53,15 @@
 my $pseudo_total = 0;
 my $print_logodds = 0;
 my $url_pattern = "";
+my $use_descr_as_name = 0;
 my $help = 0;
 
+# duplicates
+my %dup_check = ();
+
 GetOptions("skip=s" => sub {$skips{$_[1]} = 1}, "bg=s" => \$bg_file, 
   "pseudo=f" => \$pseudo_total, "logodds" => \$print_logodds, 
-  "url=s" => \$url_pattern, "h" => \$help) or pod2usage(2);
+  "url=s" => \$url_pattern, "id" => \$use_descr_as_name, "h" => \$help) or pod2usage(2);
 #check pseudo total
 pod2usage("Option -pseudo must have a positive value.") if ($pseudo_total < 0);
 #output help if requested
@@ -69,18 +73,21 @@
 # Read the input file.
 my $num_skipped = 0;
 my $num_motifs = 0;
-my (%motifs, $motif_name, $motif_matrix);
+my (%motifs, $motif_alt, $motif_name, $motif_matrix);
 while (<>) {
   chomp;
   # skip blank lines
   next if (/^\s*$/);
 
   if (/^>(\S+)/) {
-    my $next_id = $1;
+    my $next_name = $1;
+    my @fields = split;
+    my $next_alt = ($#fields > 0) ? $fields[1] : "";
     # create previous motif
     conditional_motif_output();
     # motif id line
-    $motif_name = $next_id;
+    $motif_name = $next_name;
+    $motif_alt = $next_alt;
     $motif_matrix = "";
   } else {
     $motif_matrix .= $_ . "\n";
@@ -103,12 +110,24 @@
 
 sub conditional_motif_output {
   if ($motif_matrix) {
-    if ( defined($skips{$motif_name})) {
+    if (defined($skips{$motif_name})) {
       $num_skipped++;
     } else {
       my $url = $url_pattern;
       $url =~ s/MOTIF_NAME/$motif_name/g;
-      my ($motif, $errors) = matrix_to_intern(\%bg, $motif_matrix, 'row', $sites, $pseudo_total, id => $motif_name, url => $url);
+      # check for duplicate motif names
+      if ($dup_check{$motif_name}) {
+        my $seen = $dup_check{$motif_name};
+        while ($dup_check{$motif_name . "_" . ($seen + 1)}) {
+          $seen++;
+        }
+        $dup_check{$motif_name} = $seen + 1;
+        $motif_name .= "_" . ($seen + 1);
+      }
+      $dup_check{$motif_name} = 1;
+
+      my ($motif, $errors) = matrix_to_intern(\%bg, $motif_matrix, 'row', 
+        $sites, $pseudo_total, id => $motif_name, alt => $motif_alt, url => $url);
       print(STDERR join("\n", @{$errors}), "\n") if @{$errors};
       $motifs{$motif_name} = $motif if $motif;
     }
diff -r e77390759cae -r 61325860cd46 scripts/dreme.py.in
--- a/scripts/dreme.py.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/dreme.py.in	Tue Jan 22 18:14:22 2013 +1000
@@ -323,7 +323,7 @@
     unerased_log_Evalue = unerased_log_pvalue[4] + log(len(re_pvalues))
     # output the motif if significant
     if best_log_Evalue <= log(ethresh):
-        pwm = make_pwm_from_re(best_re, pos_seqs, given_only)
+        pwm = make_pwm_from_re(best_re, pos_seqs, given_only=given_only)
         # disable timeout as now printing
         disable_timeout()
         # print the best RE
@@ -911,7 +911,7 @@
     index = min(re, get_rc(re))
     candidate_pvalues[index] = re_pvalues[index] = new_pvalue
     all_letters = _dna_alphabet + _dna_ambigs
-    new_re_pvalues = re_refine_all(re_pvalues, candidate_pvalues, nref, all_letters, pos_seqs, neg_seqs, given_only)
+    new_re_pvalues = re_refine_all(re_pvalues, candidate_pvalues, nref, all_letters, pos_seqs, neg_seqs, given_only=given_only)
     (new_pvalue, new_re) = min([ (new_re_pvalues[re][4],re) for re in new_re_pvalues] )
     if _verbosity >= NORMAL_VERBOSE:
         print "Refined RE is %s (p=%s)..." % (new_re,  sprint_logx(new_pvalue, 1, _pv_format))
@@ -931,7 +931,7 @@
     """
 
     # Convert REs to consensus strings and create combined consensus string.
-    (pwm, nsites) = make_pwm_from_re(re, seqs, given_only)
+    (pwm, nsites) = make_pwm_from_re(re, seqs, given_only=given_only)
     return pwm.consensus_sequence()
 
 
@@ -951,7 +951,7 @@
 
     new_re = ""
     inverse_map = inverse_dna_ambig_mapping()
-    (pwm, nsites) = make_pwm_from_re(re, seqs, given_only)
+    (pwm, nsites) = make_pwm_from_re(re, seqs, given_only=given_only)
     consensus = pwm.consensus()
     for matches in consensus:
         matches.sort()
diff -r e77390759cae -r 61325860cd46 scripts/fasta-get-markov.pl.in
--- a/scripts/fasta-get-markov.pl.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/fasta-get-markov.pl.in	Tue Jan 22 18:14:22 2013 +1000
@@ -5,154 +5,137 @@
 
 # Copyright Timothy L. Bailey, 2002
 
-$PGM = $0;			# name of program
-$PGM =~ s#.*/##;                # remove part up to last slash
-@args = @ARGV;			# arguments to program
-$| = 1;				# flush after all prints
-$SIG{'INT'} = 'cleanup';	# interrupt handler
-# Note: so that interrupts work, always use for system calls:
-# 	if ($status = system($command)) {cleanup($status)}
+use strict;
+use warnings;
 
-# requires
-push(@INC, split(":", $ENV{'PATH'}));	# look in entire path
-#require 'beta.pl';
+use Getopt::Long;
+use Pod::Usage;
 
-# defaults
-$order = 0;			# order of Markov model to assume
-$DNA_ALPHABET = "ACGT";		# DNA sequence alphabet
-$PROT_ALPHABET = "ACDEFGHIKLMNPQRSTVWY";	# protein sequence alphabet
-$ALPHABET = $DNA_ALPHABET;	# sequence alphabet
-$USE_RC = 1;			# combine tuples and their reverse complements
-$NOSTATUS = 0;
+=head1 NAME
 
-$usage = <<USAGE;		# usage message
-  USAGE:
-	$PGM [-m <order>] [-p] [-norc]
+fasta-get-markov - Estimate a Markov model from a FASTA file of sequences.
 
-	[-m <order>]	order of Markov model to use; default $order
-	[-p]		use protein alphabet; default: use DNA alphabet
-	[-norc]		do not combine forward and reverse complement freqs;
-			this is highly recommended for RNA sequences.
-	[-nostatus]	do not print constant status messages.
+=head1 SYNOPSIS
 
-	Estimate a Markov model from a FASTA file of sequences.
+fasta-get-markov [-m <order>] [-p] [-norc]
 
-	Converts U to T for DNA alphabet for use with RNA sequences.
-	Skips tuples containing ambiguous characters.
-	Combines both strands of DNA unless -norc is set.
+  [-m <order>]        order of Markov model to use; default 0
+  
+  [-p]                use protein alphabet; default: use DNA alphabet
+  
+  [-norc]             do not combine forward and reverse complement freqs;
+                       this is highly recommended for RNA sequences.
 
-	Reads standard input.
-	Writes standard output.
+  [-pseudo <count>]   pseudocount added to avoid probabilities of zero;
+                       default: use a pseudocount of 0.1 .
+  
+  [-nostatus]         do not print constant status messages.
 
-        Author: Timothy L. Bailey
-USAGE
+  [-help]             display this help message.
 
-$nargs = 0;					# number of required args
-if ($#ARGV+1 < $nargs) { print_usage("$usage", 1); }
+  Estimate a Markov model from a FASTA file of sequences.
 
-# get input arguments
-while ($#ARGV >= 0) {
-  $_ = shift;
-  if ($_ eq "-h") {				# help
-    print_usage("$usage", 0);
-  } elsif ($_ eq "-m") {			# order of Markov model
-    $order = shift;
-  } elsif ($_ eq "-p") {			# use protein
-    $ALPHABET = $PROT_ALPHABET;
-    $USE_RC = 0;				# no reverse complements
-  } elsif ($_ eq "-norc") {			# don't combine for. & rc freqs
-    $USE_RC = 0;				# no reverse complements
-  } elsif ($_ eq "-nostatus") {
-    $NOSTATUS = 1;
-  } else {
-    print_usage("$usage", 1);
-  }
+  Converts U to T for DNA alphabet for use with RNA sequences.
+  Skips tuples containing ambiguous characters.
+  Combines both strands of DNA unless -norc is set.
+
+  Reads standard input.
+  Writes standard output.
+
+  Author: Timothy L. Bailey
+
+=cut
+
+# set special vars
+$| = 1; # flush after all prints
+$SIG{'INT'} = 'quick_exit'; # interrupt handler
+
+# constants
+my $DNA_ALPHABET = "ACGT"; # DNA sequence alphabet
+my $PROT_ALPHABET = "ACDEFGHIKLMNPQRSTVWY"; # protein sequence alphabet
+
+# option defaults
+my $alphabet = $DNA_ALPHABET;
+my $order = 0;
+my $pseudo = 0.1;
+my $isprot = 0; # FALSE
+my $norc = 0; # FALSE 
+my $nostatus = 0; # FALSE
+my $help = 0; # FALSE
+
+
+GetOptions("m=i" => \$order, "p" => \$isprot, "norc" => \$norc,
+  "pseudo=f" => \$pseudo, "nostatus" => \$nostatus,
+  'help|?' => \$help) or pod2usage(2);
+if ($isprot) {
+  $norc = 1;
+  $alphabet = $PROT_ALPHABET;
 }
+pod2usage(1) if $help;
 
-printf stderr "Using %s alphabet...\n", ($ALPHABET eq $DNA_ALPHABET) ? "DNA" : "PROTEIN" unless $NOSTATUS;
+printf STDERR "Using %s alphabet...\n", $isprot ? "PROTEIN" : "DNA" unless $nostatus;
 
-#
 # read FASTA file
-#
-while (($seq = read_fasta_sequence()) ne "") {
-
-  printf stderr "Seq: %d\r", ++$i unless $NOSTATUS;
-
+my $seq;
+my $i = 0;
+my %tuple_counts = ();
+my @total_counts = ();
+while (($seq = &read_fasta_sequence()) ne "") {
+  $i++; printf STDERR "Seq: %5d\r", $i unless $nostatus;
   # Convert U to T for DNA alphabet.
-  $seq =~ s/U/T/g if ($ALPHABET eq $DNA_ALPHABET);
-
+  $seq =~ s/U/T/g unless $isprot;
   # count the tuples
-  count_tuples($seq, $order, $ALPHABET);
-
+  &count_tuples($seq, $order, $alphabet, \%tuple_counts, \@total_counts);
 } # read next sequence
 
-# print the tuple frequencies
-print_tuples($order, $ALPHABET);
-
-# cleanup files
-cleanup($status);
+if ($i > 0) {
+  # print the tuple frequencies
+  &print_tuples($order, $alphabet, $norc, $pseudo, \%tuple_counts, \@total_counts);
+} else {
+  pod2usage("No sequences found!"); 
+}
+exit(0);
  
 ###############################################################################
 #                      Subroutines                                            #
 ###############################################################################
 
 ###############################################################################
-#	
-#	read_fasta_sequence
+#        
+#        read_fasta_sequence
 #
-#	Read a sequence from a FASTA file of sequences.
-#	Removes whitespace from the sequence.
+#        Read a sequence from a FASTA file of sequences.
+#        Removes whitespace from the sequence.
 #
-#	Returns the sequence (without the ID line) or "" if EOF.
+#        Returns the sequence (without the ID line) or "" if EOF.
 #
 ###############################################################################
 sub read_fasta_sequence {
   my($seq);
 
-  $seq = "";					# no sequence read yet
+  $seq = "";                                        # no sequence read yet
   while (<STDIN>) {
-    if (/^>/) {					# new sequence
-      if ($seq ne "") { return($seq); }		# sequence already read?
+    if (/^>/) {                                        # new sequence
+      if ($seq ne "") { return($seq); }                # sequence already read?
     } else {
-      s/\s*//g; 				# remove whitespace from string
-      tr/a-z/A-Z/;				# convert to uppercase
+      s/\s*//g;                                 # remove whitespace from string
+      tr/a-z/A-Z/;                                # convert to uppercase
       $seq .= $_;
     }
   }
-  return($seq);					# return the sequence
+  return($seq);                                        # return the sequence
 } # sub read_fasta_sequence
 
 ###############################################################################
-#	
-#	remove_ambigs
 #
-#	Remove all the ambiguous characters from a sequence.
-#	Works by removing all but those characters listed in the alph string.
+#        count_tuples
 #
-#	Returns the updated sequence.
-#
-###############################################################################
-sub remove_ambigs {
-  my($seq, $alph) = @_;
-  
-  $seq =~ s/[^$alph]//g; 
-  $seq;
-} # sub remove_ambigs
-
-###############################################################################
-#
-#	count_tuples
-#
-# 	Count the occurences of tuples of lengths 1 to order+1.
-#
-#	Sets global:
-#	$cnt{$tuple}			counts of tuples
-#	$total[$w]			total counts for width $w
+#         Count the occurences of tuples of lengths 1 to order+1.
 #
 ###############################################################################
 sub count_tuples {
-  my($seq, $order, $alphabet) = @_;
-  local($minw, $maxw, $length, $w, $i, $tuple);
+  my ($seq, $order, $alphabet, $tuple_counts, $total_counts) = @_;
+  my ($minw, $maxw, $length, $w, $i, $tuple);
 
   $minw = 1;
   $maxw = $order+1;
@@ -161,13 +144,13 @@
   #
   # count tuples
   #
-  for ($w=$minw; $w<=$maxw; $w++) { 		# width of tuple
+  for ($w=$minw; $w<=$maxw; $w++) {                 # width of tuple
 
-    for ($i=0; $i<$length-$w+1; $i++) {		# start of tuple
-      $tuple = substr($seq, $i, $w);		# get the tuple
-      next if ($tuple =~ /[^$alphabet]/);	# skip tuples with ambigs
-      $cnt{$tuple}++;
-      $total[$w]++;
+    for ($i=0; $i<$length-$w+1; $i++) {                # start of tuple
+      $tuple = substr($seq, $i, $w);                # get the tuple
+      next if ($tuple =~ /[^$alphabet]/);        # skip tuples with ambigs
+      $tuple_counts->{$tuple}++;
+      $total_counts->[$w]++;
     } # start of tuple
 
   } # width of tuple
@@ -176,44 +159,42 @@
 
 ###############################################################################
 #
-#	print_tuples
+#        print_tuples
 #
-# 	Print the frequency of tuples of lengths 1 to order+1.
-#	Prints all possible tuples, including unobserved ones.
-#	Combines the tuple with its reverse complement and uses average
-#	frequency.
-#
-#	Uses global:
-#	$cnt{$tuple}			counts of tuples
-#	$total[$w]			total counts for width $w
+#         Print the frequency of tuples of lengths 1 to order+1.
+#        Prints all possible tuples, including unobserved ones.
+#        Combines the tuple with its reverse complement and uses average
+#        frequency.
 #
 ###############################################################################
 sub print_tuples {
-  my($order, $alph) = @_;
+  my($order, $alph, $norc, $pseudo, $tuple_counts, $total_counts) = @_;
   my($minw, $maxw, $w, @tuples, @new_tuples, @letters, $t, $a, $i, $tuple, $rc, $freq);
-  my($sum);
+  my($sum, $pseudo_frac);
 
   $minw = 1;
   $maxw = $order+1;
-  @letters = split(//, $alph);		# letters in alphabet
+  @letters = split(//, $alph);                # letters in alphabet
 
-  #
   # print tuple frequencies
-  #
   $tuples[0] = "";
-  for ($w=$minw; $w<=$maxw; $w++) { 		# width of tuple
+  for ($w=$minw; $w<=$maxw; $w++) {                 # width of tuple
     printf("# order %d\n", $w-1);
+    $pseudo_frac = $pseudo / (scalar(@letters) ** $w);
     $sum = 0; 
     # add each letter in alphabet to each old tuple
     $i = 0;
     foreach $t (@tuples) {
       foreach $a (@letters) {
         $tuple = $t . $a;
-        if ($USE_RC) {
-	  $rc = rc($tuple);
-	  $freq = ($cnt{$tuple} + $cnt{$rc})/(2*$total[$w]);
+        my $tc = (defined($tuple_counts->{$tuple}) ? $tuple_counts->{$tuple} : 0);
+        if (!$norc) {
+          $rc = reverse($tuple);
+          $rc =~ tr/ACGT/TGCA/;
+          my $tc_rc = (defined($tuple_counts->{$rc}) ? $tuple_counts->{$rc} : 0);
+          $freq = ($pseudo_frac + $tc + $tc_rc)/(2*$total_counts->[$w] + $pseudo);
         } else {
-	  $freq = ($cnt{$tuple} / $total[$w]);
+          $freq = ($pseudo_frac + $tc) / ($total_counts->[$w] + $pseudo);
         }
         #$sum += $freq;
         printf("%s %9.3e\n", $tuple, $freq);
@@ -226,62 +207,13 @@
   } # width
 
 } # print_tuples
-
+ 
 ###############################################################################
+#       quick_exit
 #
-#	rc
-#
-# 	Get reverse complement of DNA string
+#       Handle interrupt.
 #
 ###############################################################################
-sub rc {
-  my($string) = @_;
-  my($w, $i, $seq, $first);
-
-  $first = 0;
-  if ($string =~ /^\*/) {			# handle Hamming-1 strings
-    $first = 1;
-    $seq = "*";			
-  }
-  $w = length($string);
-  for ($i=$w-1; $i>=$first; $i--) {
-    $a = substr($string, $i, 1);
-    $a = ($a eq "A") ? "T" : ($a eq "C") ? "G" : ($a eq "G") ? "C" : 
-      ($a eq "T") ? "A" : $a;
-    $seq .= $a;
-  }
-  $seq;
-} # rc
-
-###############################################################################
-#
-#       print_usage
-#
-#	Print the usage message and exit.
-#
-###############################################################################
-sub print_usage {
-  local ($usage, $status) = @_;
- 
-  if (-c STDOUT) {			# standard output is a terminal
-    open(C, "| more");
-    print C $usage;
-    close C;
-  } else {				# standard output not a terminal
-    print STDERR $usage;
-  }
-
-  exit $status;
+sub quick_exit {
+  pod2usage("\nProgram interrupted!"); 
 }
- 
-###############################################################################
-#       cleanup
-#
-#       cleanup stuff
-#
-###############################################################################
-sub cleanup {
-  local($status, $msg) = @_;
-  if ($status && "$msg") {print STDERR "$msg: $status\n";}
-  exit($status);
-}
diff -r e77390759cae -r 61325860cd46 scripts/hypergeometric.py
--- a/scripts/hypergeometric.py	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/hypergeometric.py	Tue Jan 22 18:14:22 2013 +1000
@@ -45,12 +45,11 @@
 
 
 # Routines for computing the logarithm of a sum in log space.
-def log_sum(logx, logy):
-    """ Return the log(x+y) given log(x) and log(y). """
-    if logx > logy:
-        return log_sum1(logx, logy)
+def my_exp(x):
+    if x < _log_small:
+        return 0.0
     else:
-        return log_sum1(logy, logx)
+        return exp(x)
 
 def log_sum1(logx, logy):
     if (logx - logy) > _mm_nats:
@@ -58,11 +57,12 @@
     else:
         return logx + log(1 + my_exp(logy - logx))
 
-def my_exp(x):
-    if x < _log_small:
-        return 0.0
+def log_sum(logx, logy):
+    """ Return the log(x+y) given log(x) and log(y). """
+    if logx > logy:
+        return log_sum1(logx, logy)
     else:
-        return exp(x)
+        return log_sum1(logy, logx)
 
 # print very large or small numbers
 def sprint_logx(logx, prec, format):
@@ -104,6 +104,7 @@
         #rt = (prob, sless, sright, sleft, slarg) = (1.0,1.0,1.0,1.0,1.0)
         rt = (log_prob, log_sless, log_sright, log_sleft, log_slarg) = (0,0,0,0,0)
         return rt
+
     log_prob = log_hyper0(a1, row1, col1, n)
     log_sleft = _log_zero
     log_p = log_hyper(min)
@@ -137,11 +138,14 @@
 
     if abs(i - a1) < abs(j - a1):
         log_sless = log_sleft
-        log_slarg = log_sum(1.0, -log_sleft)
-        log_slarg = (log_slarg, log_prob)
+        #log_slarg = (log_slarg, log_prob)
+        log_slarg = log(1.0-exp(log_sleft))
+        log_slarg = log_sum(log_slarg, log_prob)
     else:
-        log_sless = log_sum(1.0, -log_sright)
-        log_sless = (log_sless, log_prob)
+        #log_sless = log_sum(1.0, -log_sright)
+        log_sless = log(1.0-exp(log_sright))
+        #log_sless = (log_sless, log_prob)
+        log_sless = log_sum(log_sless, log_prob)
         log_slarg = log_sright
     return (log_prob, log_sless, log_sright, log_sleft, log_slarg)
 
@@ -253,8 +257,11 @@
 
     # compute cumulative hypergeometric p-value
     log_pvalue = log_getFETprob(N-n, n, P-p, p)[4];
+    #log_less = log_getFETprob(N-n, n, P-p, p)[1];
     # print the pvalue
     pvalue = sprint_logx(log_pvalue, 3, "%6.3fe%-5.0f")
+    #pvalue2 = sprint_logx(log_less, 3, "%6.3fe%-5.0f")
+    #print >> sys.stdout, pvalue, pvalue2, p, P, n, N
     print >> sys.stdout, pvalue, p, P, n, N
 
     sys.exit(0)
diff -r e77390759cae -r 61325860cd46 scripts/meme-chip.pl.in
--- a/scripts/meme-chip.pl.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/meme-chip.pl.in	Tue Jan 22 18:14:22 2013 +1000
@@ -42,6 +42,7 @@
   -dreme-m          <num>   : stop searching after finding this many motifs
 
  CentriMo Specific Options:
+  -centrimo-local           : compute enrichment of all regions (not only central)
   -centrimo-score   <num>   : set the minimum allowed match score
   -centrimo-maxreg  <num>   : set the maximum region size to be considered
   -centrimo-ethresh <num>   : set the E-value threshold for reporting
@@ -194,7 +195,7 @@
     MEME_MINW => undef, MEME_MAXW => undef, MEME_MOD => 'zoops', 
     MEME_NMOTIFS => 3, MEME_MINSITES => undef, MEME_MAXSITES => undef, 
     MEME_P => undef, MEME_PALINDROMES => 0, 
-    DREME_E => undef, DREME_M => undef, CENTRIMO_SCORE => undef, 
+    DREME_E => undef, DREME_M => undef, CENTRIMO_LOCAL => 0, CENTRIMO_SCORE => undef, 
     CENTRIMO_MAXREG => undef, CENTRIMO_ETHRESH => undef, CENTRIMO_NOSEQ => 0,
     SEQUENCES => '', DBS => []};
   # General Options
@@ -243,6 +244,7 @@
     'meme-pal'          => \$options->{MEME_PALINDROMES},
     'dreme-e=f'         => \$options->{DREME_E},
     'dreme-m=i'         => \$options->{DREME_M},
+    'centrimo-local'    => \$options->{CENTRIMO_LOCAL},
     'centrimo-score=f'  => \$options->{CENTRIMO_SCORE},
     'centrimo-maxreg=i' => \$options->{CENTRIMO_MAXREG},
     'centrimo-ethresh=f'=> \$options->{CENTRIMO_ETHRESH},
@@ -735,6 +737,7 @@
   my $centrimo_dir = catdir($opts->{OUT_DIR}, 'centrimo_out');
   my @args = ('-noflip', '-seqlen', $seqs->{MOST_LEN}, '-verbosity', 
     $opts->{APP_VERBOSITY}, '-oc', $centrimo_dir, '-bgfile', $seqs->{BFILE});
+  push(@args, '-local') if $opts->{CENTRIMO_LOCAL};
   push(@args, '-score', $opts->{CENTRIMO_SCORE}) if (defined($opts->{CENTRIMO_SCORE}));
   push(@args, '-maxreg', $opts->{CENTRIMO_MAXREG}) if (defined($opts->{CENTRIMO_MAXREG}));
   push(@args, '-ethresh', $opts->{CENTRIMO_ETHRESH}) if (defined($opts->{CENTRIMO_ETHRESH}));
diff -r e77390759cae -r 61325860cd46 scripts/meme-chip_webservice.pl.in
--- a/scripts/meme-chip_webservice.pl.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/meme-chip_webservice.pl.in	Tue Jan 22 18:14:22 2013 +1000
@@ -27,6 +27,7 @@
     -dreme-m <num>              maximum number of motifs to find
 
   CentriMo Specific Options:
+    -centrimo-local             compute enrichment of all regions (not only central)
     -centrimo-score <num>       minimum match score
     -centrimo-maxreg <num>      maximum central enrichment region
     -centrimo-ethresh <num>     threshold for reporting enrichment
@@ -98,7 +99,8 @@
 # option defaults
 my ($upmotif, $bfile, $norc, $meme_mod, $meme_minw, $meme_maxw, $meme_nmotifs, 
   $meme_minsites, $meme_maxsites, $meme_pal, $dreme_e, $dreme_m, 
-  $centrimo_score, $centrimo_maxreg, $centrimo_ethresh, $centrimo_noseq, $help);
+  $centrimo_score, $centrimo_maxreg, $centrimo_ethresh, $centrimo_noseq,
+  $centrimo_local, $help);
 my $sequences;
 my @dbmotifs;
 my @motifs;
@@ -130,6 +132,7 @@
   'centrimo-score=f'  => \$centrimo_score,
   'centrimo-maxreg=i' => \$centrimo_maxreg,
   'centrimo-ethresh=f'=> \$centrimo_ethresh,
+  'centrimo-local'    => \$centrimo_local,
   'centrimo-noseq'    => \$centrimo_noseq,
   'help|?'          => \$help
 );
@@ -245,6 +248,7 @@
 push(@args, '-meme-pal') if $meme_pal;
 push(@args, '-dreme-e', $dreme_e) if defined($dreme_e);
 push(@args, '-dreme-m', $dreme_m) if defined($dreme_m);
+push(@args, '-centrimo-local') if $centrimo_local;
 push(@args, '-centrimo-score', $centrimo_score) if defined($centrimo_score);
 push(@args, '-centrimo-maxreg', $centrimo_maxreg) if defined($centrimo_maxreg);
 push(@args, '-centrimo-ethresh', $centrimo_ethresh) if defined($centrimo_ethresh);
diff -r e77390759cae -r 61325860cd46 scripts/metatest.pl.in
--- a/scripts/metatest.pl.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/metatest.pl.in	Tue Jan 22 18:14:22 2013 +1000
@@ -528,7 +528,7 @@
   # with genomic coordinates provied in PSP and fasta files.
   $test_results += &smoke_test($update, $continue, $cleanup,
     'fimo', '',
-    ['--text', '--psp', 'fimo/GCN4_YPD-genomic.psp', '--prior-dist', 
+    ['--text', '--parse-genomic-coord', '--psp', 'fimo/GCN4_YPD-genomic.psp', '--prior-dist', 
       'fimo/prior.dist.txt', 'fimo/GCN4.meme', 'fimo/GCN4_YPD-genomic.fasta'],
     [{output => '-', reference => 'fimo/fimo-priors-genomic.txt', type => 'text'}],
     'results/fimo4');
diff -r e77390759cae -r 61325860cd46 scripts/plot-usage
--- a/scripts/plot-usage	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/plot-usage	Tue Jan 22 18:14:22 2013 +1000
@@ -261,19 +261,19 @@
     }
   }
   printf(")\n") > com;
-  print "set xlabel '", min_year, "-", max_year, "' 0,-2 font '1,40'" > com
+  print "set xlabel '", min_year, "-", max_year, "' offset 0,-2 font '1,40'" > com
   if (t == 1) {
-    print "set ylabel 'USERS PER MONTH' 1,0 font '1,40'" > com
+    print "set ylabel 'USERS PER MONTH' offset 1,0 font '1,40'" > com
   } else if (t == 2) {  
-    print "set ylabel 'MAX RUNS PER MONTH' 1,0 font '1,40'" > com
+    print "set ylabel 'MAX RUNS PER MONTH' offset 1,0 font '1,40'" > com
   } else if (t == 3) {  
-    print "set ylabel 'CPU HOURS PER MONTH' 1,0 font '1,40'" > com
+    print "set ylabel 'CPU HOURS PER MONTH' offset 1,0 font '1,40'" > com
   } else {
-    print "set ylabel 'RUNS PER MONTH' 1,0 font '1,40'" > com
+    print "set ylabel 'RUNS PER MONTH' offset 1,0 font '1,40'" > com
   }
   print "set xrange [0:", x, "]" > com
   print "set yrange [0:", ymax, "]" > com
-  print "set data style boxes" > com
+  print "set style data boxes" > com
   print "plot '" plotdata "' notitle" > com
   # print pointsize
   point = int(784/(x-1));
@@ -308,9 +308,9 @@
   -file $com \
   $ps
 
-if (!($?s)) then
-  /bin/rm $pgm.$ts$name.tex
-endif
+#if (!($?s)) then
+#  /bin/rm $pgm.$ts$name.tex
+#endif
 
 cleanup:
 /bin/rm $pgm.$$.*.tmp
diff -r e77390759cae -r 61325860cd46 scripts/taipale2meme.pl.in
--- a/scripts/taipale2meme.pl.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/taipale2meme.pl.in	Tue Jan 22 18:14:22 2013 +1000
@@ -26,11 +26,14 @@
 taipale2meme [options]
 
  Options:
+  [-nc <c>]*		  file columns from which to create motif names 
+			  by joining with "_"; default: first non-empty column
+  [-oc <c>]*		  omit PWM if this column not empty
   -postfix <append>       text to append to motif names.
   -strands 1|2            print '+ -' or '+' on the MEME strand line;
                           default: 2 (prints '+ -')
   -bg <background file>   file with background frequencies of letters; 
-                          default: use first file background
+                          default: uniform
   -pseudo <A>             add <A> times background frequency to
                           each count when computing letter frequencies
                           default: 0
@@ -51,6 +54,8 @@
 my $sites = 20;
 
 # set option defaults
+my @name_cols;
+my @omit_cols;
 my $postfix = "";
 my $strands = 2;
 my $bg_file;
@@ -60,9 +65,16 @@
 my $help = 0;
 
 
-GetOptions("postfix=s" => \$postfix, "strands=i" => \$strands, "bg=s" => \$bg_file, 
-  "pseudo=f" => \$pseudo_total, "logodds" => \$print_logodds, 
-  "url=s" => \$url_pattern, "h" => \$help) or pod2usage(2);
+GetOptions(
+  "nc=i" => \@name_cols,
+  "oc=i" => \@omit_cols,
+  "postfix=s" => \$postfix, 
+  "strands=i" => \$strands, 
+  "bg=s" => \$bg_file, 
+  "pseudo=f" => \$pseudo_total, 
+  "logodds" => \$print_logodds, 
+  "url=s" => \$url_pattern, 
+  "h" => \$help) or pod2usage(2);
 
 #check strands
 pod2usage("Option -strands must be either 1 or 2.") unless ($strands == 1 || $strands == 2);
@@ -71,6 +83,8 @@
 
 pod2usage(1) if $help;
 
+#printf STDERR "%s\n", join(" ", @name_cols);
+
 my @l5l = ("", "", "", "", "");
 my $matchA = qr/^(["']?)[aA]\1\t/;
 my $matchC = qr/^(["']?)[cC]\1\t/;
@@ -93,26 +107,55 @@
   #look for A, C G and T possibly wrapped with " or ' at the start of the last 4 lines
   if ($l5l[1] =~ $matchA && $l5l[2] =~ $matchC && $l5l[3] =~ $matchG && $l5l[4] =~ $matchT) {
     # try to extract the name
-    my $name;
-    foreach (split(/\t/,$l5l[0])) {
-      if ($_ =~ m/^(["']?)(.+)\1$/) {
-        $name = $2 . $postfix;
+    my $name = "";
+    if (scalar(@name_cols)==0) {
+      # name is first non-empty column
+      foreach (split(/\t/,$l5l[0])) {
+	if ($_ =~ m/^(["']?)(.+)\1$/) {
+	  $name = $2;
+	  last;
+	}
+      } 
+    } else {
+      my $col = 0;
+      $name = "";
+      my @fields = split(/\t/,$l5l[0]);
+      foreach my $col (@name_cols) {
+        $_ = $fields[$col-1];
+        if ($_ =~ m/^(["']?)(.+)\1$/) {
+	  $name .= $name ? "_$2" : $2;
+        }
+        #printf STDERR "col $col name $name\n";
+      }
+    }
+    die("Missing motif name!\n") if ($name eq "");
+    $name .= $postfix;
+
+    # check that "omit" fields are empty
+    my $keep = 1;
+    foreach my $col (@omit_cols) {
+      my @fields = split(/\t/,$l5l[0]);
+      if ($fields[$col-1] ne "") {
+        $keep = 0;
         last;
       }
     }
-    die("Missing motif name!\n") unless defined($name);
-    my $url = $url_pattern;
-    $url =~ s/MOTIF_NAME/$name/g;
-    # extract the PSPM and convert it
-    my $matrix = "";
-    for (my $i = 1; $i < 5; $i++) {
-      my $line = $l5l[$i];
-      $line =~ s/^(["']?)[aAcCgGtT]\1\t//;
-      $matrix .= $line . "\n";
+    
+    if ($keep) { 
+      my $url = $url_pattern;
+      $url =~ s/MOTIF_NAME/$name/g;
+      # extract the PSPM and convert it
+      my $matrix = "";
+      for (my $i = 1; $i < 5; $i++) {
+	my $line = $l5l[$i];
+	$line =~ s/^(["']?)[aAcCgGtT]\1\t//;
+	$matrix .= $line . "\n";
+      }
+      my ($motif, $errors) = matrix_to_intern(\%bg, $matrix, 'col', $sites, $pseudo_total, rescale => 1, id => $name, url => $url);
+      print STDERR join("\n", @{$errors}), "\n" if @{$errors};
+      print intern_to_meme($motif, $print_logodds, 1, !($num_motifs++)) if $motif;
     }
-    my ($motif, $errors) = matrix_to_intern(\%bg, $matrix, 'col', $sites, $pseudo_total, rescale => 1, id => $name, url => $url);
-    print STDERR join("\n", @{$errors}), "\n" if @{$errors};
-    print intern_to_meme($motif, $print_logodds, 1, !($num_motifs++)) if $motif;
+
     #ensure no accidental reuse of data by clearing the cache
     @l5l = ("", "", "", "", "");
   }
diff -r e77390759cae -r 61325860cd46 scripts/update-plot-usage.pl.in
--- a/scripts/update-plot-usage.pl.in	Thu Nov 22 18:53:34 2012 +1100
+++ b/scripts/update-plot-usage.pl.in	Tue Jan 22 18:14:22 2013 +1000
@@ -73,7 +73,8 @@
 
 # make file extension using date
 ($sec, $min, $hour, $mday, $mon, $year, @rest) = localtime(time);
-$date = sprintf "%4d.%02d", 1900+$year, $mon+1;
+#$date = sprintf "%4d.%02d", 1900+$year, $mon+1;
+$date = sprintf "%4d", 1900+$year;
 
 # make the plot postscript files
 for ($i=0; $i<=$#pgms; $i++) {
@@ -131,9 +132,9 @@
   $status = system("scp $log $tmpfile");
   #$status = system("cp $log $tmpfile");
   #$status = 1;
-  unless ($status) {                            # copy succeded
-    system("ssh $host \"/bin/rm -f $file\"");  # remove log file
-    #system("rm -f $file");                      # remove log file
+  unless ($status) {				# copy succeded
+    system("ssh $host \"/bin/rm -f $file\"");	# remove log file
+    #system("rm -f $file");			# remove log file
     if (-e $log_saved) {			# append to saved file
       system("cat $tmpfile >> $log_saved"); unlink($tmpfile);
     } else {
@@ -142,7 +143,8 @@
   }
 
   # get the log file names
-  $_ = `ls -1 $pgm-log.*`;
+  #$_ = `ls -1 $pgm-log.*`;
+  $_ = `ls -1 $pgm-log*`;
   @files0 = split;
   @files = @files0;
   if (0) {
@@ -157,6 +159,7 @@
 
   # make the requested types of plots
   foreach $type (split(//, $types)) {
+    #print STDERR "plot-usage -name $pgm -$type\n";
     system("cat @files | plot-usage -name $pgm -$type");
   }
 
diff -r e77390759cae -r 61325860cd46 src/alphabet.c
--- a/src/alphabet.c	Thu Nov 22 18:53:34 2012 +1100
+++ b/src/alphabet.c	Tue Jan 22 18:14:22 2013 +1000
@@ -373,7 +373,10 @@
   regcomp_or_die("bg freq", &bgfreq, BGFREQ_RE, REG_EXTENDED);
   letters = rbtree_create(rbtree_strcasecmp, rbtree_strcpy, free, rbtree_dblcpy, free);
   line = str_create(100);
-  fp = fopen(bg_filename, "r");
+  if (!(fp = fopen(bg_filename, "r"))) {
+    die("Unable to open background file \"%s\" for reading.\n", bg_filename);
+  }
+  
   terminate = feof(fp);
   while (!terminate) {
     size = fread(chunk, sizeof(char), BG_CHUNK_SIZE, fp);
@@ -410,7 +413,14 @@
         // parse the letter and frequency value
         regex_strncpy(matches+1, str_internal(line), letter, 2);
         freq = regex_dbl(matches+2, str_internal(line));
-        // check the frequency is acceptable (0 to 1)
+        // check the frequency is acceptable
+        if (freq < 0 || freq > 1) {
+          die("The background file lists the illegal probability %g for "
+            "the letter %s.\n", freq, letter);
+        } else if (freq == 0) {
+          die("The background file lists a probability of zero for the "
+            "letter %s\n", letter);
+        }
         if (freq >= 0 && freq <= 1) rbtree_put(letters, letter, &freq);
       }
       str_clear(line);
@@ -452,6 +462,12 @@
     }
     set_array_item(i, freq, freqs);
   }
+  // check that all items were set
+  for (i = 0; i < alph_size(*alph, ALPH_SIZE); i++) {
+    if (get_array_item(i, freqs) == -1) {
+      die("Background is missing letter %c.\n", alph_char(*alph, i));
+    }
+  }
   // disabled for backwards compatability (AMA test was failing)
   //normalize_subarray(0, ALPH_ASIZE[*alph], 0.0, freqs);
   // calculate the values of the ambiguous letters from the concrete ones
diff -r 5863bee1d071 -r 8041c82f059e src/background.c
--- a/src/background.c	Fri Dec 07 10:34:33 2012 +1000
+++ b/src/background.c	Thu Jan 31 12:04:26 2013 +1000
@@ -16,6 +16,8 @@
 #include "background.h"
 #include "hash_alph.h"
 
+#include <assert.h>
+
 /* index from ASCII to integer and back */
 static int a2i_index[MAXASCII];
 static int i2a_index[MAXASCII];
@@ -71,53 +73,49 @@
 
 /***************************************************************************/
 /*
-	read_markov_model
+        read_markov_model
 
-	Read a file of tuple probabilities defining a Markov model.  
-	Check that all required tuples are present.  
+        Read a file of tuple probabilities defining a Markov model.  
+        Check that all required tuples are present.  
 
-	File must have format:
-		[<tuple> <p>]+
-	and may have comment lines beginning with "#" in column 1.
+        File must have format:
+                [<tuple> <p>]+
+        and may have comment lines beginning with "#" in column 1.
 
-	If the freq is not NULL, uses the 0-order
-	frequencies in freq as the model, after adding X if requested.
+        If the freq is not NULL, uses the 0-order
+        frequencies in freq as the model, after adding X if requested.
 
-	Sets the order of the model.
+        Sets the order of the model.
 
-	Returns array: 
-		cp[s2i(wa)] = Pr(a | w)
-	where "a" is a character and "w" is a string.
-	The 0-order probabilities are in positions 0..alength-1 of the
-	array.
+        Returns array: 
+                cp[s2i(wa)] = Pr(a | w)
+        where "a" is a character and "w" is a string.
+        The 0-order probabilities are in positions 0..alength-1 of the
+        array.
 
 */
 /***************************************************************************/
 double *read_markov_model( 
-  char *pfile, 					/* name of probability file */
-  double *freq,					/* letter frequencies */
-  char *alpha,					/* alphabet expected */
-  BOOLEAN add_x,				/* add x-tuples if TRUE */
-  BOOLEAN rc,					/* average reverse complements*/
-  int *order					/* order of model read */
+  char *pfile,                                         /* name of probability file */
+  double *freq,                                        /* letter frequencies */
+  char *alpha,                                        /* alphabet expected */
+  BOOLEAN add_x,                                /* add x-tuples if TRUE */
+  BOOLEAN rc,                                        /* average reverse complements*/
+  int *order                                        /* order of model read */
 ) 
 {
-  int i;					/* index into array */
-  double a_p[MAX_BACK_SIZE];			/* tuple-prob array */
-  double *a_cp; 				/* conditional prob. array */
-  FILE *pfilep;					/* file pointer to file */
-  char *line;					/* line buffer */
-  char **fields;				/* fields of line */
-  int nfields;					/* number of fields in line */
-  int line_no = 0;				/* line number */
-  char *tuple;					/* the tuple */
-  double p;					/* the probability */
-  int maxw = 0;					/* maximum tuple width */
-  int alen = strlen(alpha);			/* length of alphabet */
-  int ntuples;					/* number of tuples */
+  int i, nfields, line_no, maxw, alen, ntuples;
+  double *a_p, *a_cp, p;
+  FILE *pfilep;
+  char *line, **fields, *tuple;
+
+  line_no = 0;
+  maxw = 0;
+  alen = strlen(alpha);
   a_cp = NULL;
   line = NULL;
   fields = NULL;
+
   /* check input */
   if (!pfile && !freq) {
     fprintf(stderr, "read_markov_model error: specify pfile or freq\n");
@@ -138,10 +136,10 @@
   setup_index(alpha);
 
   /* use the frequencies if given */
-  if (freq) {					/* frequencies given */
+  if (freq) {                                        /* frequencies given */
     Resize(a_cp, alen, double);
     for (i=0; i<alen-add_x; i++) RND(freq[i], 8, a_cp[i]);
-    if (add_x) a_cp[i] = 1.0;			/* Pr(X) */
+    if (add_x) a_cp[i] = 1.0;                        /* Pr(X) */
     /* average reverse complement probabilities together if requested */
     if (rc) average_rc(add_x, a_cp, 1, "", 0, alpha); 
     // cleanup before return
@@ -150,7 +148,8 @@
   }
 
   /* initialize probability array */
-  for (i=0; i<MAX_BACK_SIZE; i++) a_p[i] = -1;
+  a_p = NULL;
+  ntuples = 0;
 
   /* read in the probabilities and save indexed by uppercase tuple name */
   if (!(pfilep = fopen(pfile, "r"))) {
@@ -158,14 +157,13 @@
     exit(1);
   }
 
-  /*fprintf(stderr, "Reading background probabilities...\n");*/
-  while (1) {					/* read file */
+  while (1) {                             /* read file */
     int len, index;
     line_no++;
-    Getline(pfilep, line, len);			/* read next line */
-    if (!line) break;				/* at EOF */
-    if (line[0] == '#') continue;		/* skip comments */
-    Split(line, fields, nfields);		/* get tuple and prob */
+    Getline(pfilep, line, len);           /* read next line */
+    if (!line) break;                     /* at EOF */
+    if (line[0] == '#') continue;         /* skip comments */
+    Split(line, fields, nfields);         /* get tuple and prob */
     if (nfields != 2) {
       fprintf(stderr, 
         "Formatting error in file %s line %d: %s\n", pfile, line_no, line);
@@ -176,21 +174,33 @@
     if (p<0 || p>1) {
       fprintf(stderr, "Illegal probability in file %s line %d: %s\n", 
         pfile, line_no, line);
+      exit(1);
+    } else if (p == 0) {
+      fprintf(stderr, "Zero probability state %s in Markov model file \"%s\" "
+          "on line %d.\n", tuple, pfile, line_no);
+      exit(1);
     }
-    len = strlen(tuple);
-    maxw = MAX(len, maxw);
     index = s2i(tuple);
     if (index < 0) {
       fprintf(stderr, "Illegal character in word `%s' in file %s line %d: %s\n",
         tuple, pfile, line_no, line);
       exit(1);
     }
-    if (index >= MAX_BACK_SIZE) {
-      for (i=1, ntuples=0; i<=maxw; i++) ntuples+= pow(alen, i);
-      fprintf(stderr, "Background model too large.  Use smaller model or increase \nMAX_BACK_SIZE to at least %d in background.h and recompile.\n", ntuples);
-      exit(1);
+    // check if we need to expand the storage allocated
+    len = strlen(tuple);
+    if (len > maxw) {
+      int new_ntuples;
+      // calculate the new size needed
+      for (i = maxw+1, new_ntuples = ntuples; i <= len; i++) new_ntuples += pow(alen, i);
+      // resize and initilize new section to -1
+      Resize(a_p, new_ntuples, double);
+      for (i = ntuples; i < new_ntuples; i++) a_p[i] = -1;
+      // record the new sizes
+      maxw = len;
+      ntuples = new_ntuples;
     }
-    a_p[index] = p;				/* store probability */
+    assert(index < ntuples);
+    a_p[index] = p; // store probability
   }
   fclose(pfilep);
 
@@ -202,7 +212,7 @@
     exit(1);
   }
 
-  *order = maxw - 1;				/* order of Markov model */
+  *order = maxw - 1; /* order of Markov model */
 
   /* average reverse complement probabilities together if requested */
   if (rc) average_rc(add_x, a_p, maxw, "", 0, alpha); 
@@ -223,8 +233,9 @@
 
   // cleanup before return
   if (add_x) free(alpha);
+  free(a_p);
 
-  return(a_cp);					/* return conditionals */
+  return(a_cp);                                        /* return conditionals */
 } /* read_markov_model */
 
 /***************************************************************************/
diff -r 5863bee1d071 -r 8041c82f059e src/background.h
--- a/src/background.h	Fri Dec 07 10:34:33 2012 +1000
+++ b/src/background.h	Thu Jan 31 12:04:26 2013 +1000
@@ -16,10 +16,6 @@
 #ifndef BACKGROUND_H
 #define BACKGROUND_H
 
-/* maximum size of background model */
-// 475254 is required for a third-order protein model
-#define MAX_BACK_SIZE  475254
-
 /* compute the log probability of a substring of a sequence given the log
    cumulative probability in lcb:
    log Pr(S_{i,...,i+w-1} | H_0) 
diff -r e77390759cae -r 61325860cd46 src/centrimo.c
--- a/src/centrimo.c	Thu Nov 22 18:53:34 2012 +1100
+++ b/src/centrimo.c	Tue Jan 22 18:14:22 2013 +1000
@@ -80,7 +80,7 @@
   "     --dfile <desc file>      use the file content as the description;\n"
   "                               default: no description\n"
   "     --local                  compute the enrichment of all regions;\n"
-  "                               default: compute enrichement of central regions only\n"
+  "                               default: compute enrichment of central regions only\n"
   "     --noseq                  do not store sequence IDs in HTML output;\n"
   "                               default: IDs are stored in the HTML output\n"
   "     --neg <fasta file>       plot a negative set of sequences against the\n"
@@ -180,6 +180,9 @@
   // significance of the same window in the negative set if it exists
   double neg_log_pvalue;
   double neg_log_adj_pvalue;
+  // Fisher Exact test p-value comparing positive and negative enrichment
+  double fisher_log_pvalue;
+  double fisher_log_adj_pvalue;
   // how different is the negative set?
   double mcc; // Matthews correlation coefficient
 } WIN_STATS_T;
@@ -977,8 +980,13 @@
     jsonwr_dbl_prop(json, "log_adj_pvalue", window->log_adj_pvalue);
     if (negative_sequences) {
       jsonwr_dbl_prop(json, "neg_sites", window->neg_sites);
-      if (discriminative) jsonwr_dbl_prop(json, "neg_log_adj_pvalue",
-          window->neg_log_adj_pvalue);
+      jsonwr_dbl_prop(json, "neg_log_adj_pvalue", window->neg_log_adj_pvalue);
+      // Compute Fisher Exact Test for peak
+      window->fisher_log_pvalue = window_FET(window->sites, counts->total_sites, window->neg_sites,
+        neg_counts->total_sites); 
+      window->fisher_log_adj_pvalue = LOGEV(log(stats->n_tests), window->fisher_log_pvalue);
+      jsonwr_dbl_prop(json, "fisher_log_adj_pvalue", window->fisher_log_adj_pvalue);
+      jsonwr_dbl_prop(json, "fisher_adj_pvalue", window->fisher_log_adj_pvalue);
       if (mcc) jsonwr_dbl_prop(json, "mcc", window->mcc);
     }
     jsonwr_end_object_value(json);
@@ -1434,11 +1442,9 @@
   window->log_adj_pvalue = log_adj_pvalue;
   if (options->neg_sequences) {
     window->neg_sites = neg_sites;
-    if (options->disc) {
-      window->neg_log_pvalue = window_binomial(neg_sites, 
-          neg_c_counts->total_sites, bins, n_bins);
-      window->neg_log_adj_pvalue = LOGEV(log_n_tests, window->neg_log_pvalue);
-    }
+    window->neg_log_pvalue = window_binomial(neg_sites, 
+      neg_c_counts->total_sites, bins, n_bins);
+    window->neg_log_adj_pvalue = LOGEV(log_n_tests, window->neg_log_pvalue);
     if (options->mcc) {
       window->mcc = window_MCC(pve_sites, neg_sites, seqN, neg_seqN);
     }
@@ -1591,7 +1597,7 @@
   }
   motif_stats->n_tests = n_tests;
   motif_stats->n_bins = n_bins;
-  motif_stats->score_threshold = best_score_thresh;
+  motif_stats->score_threshold = options->optimize_score ? best_score_thresh : options->score_thresh;
   motif_stats->sites = best_total_sites;
   motif_stats->neg_sites = best_neg_total_sites;
   return motif_stats;
@@ -1679,6 +1685,9 @@
   }
   // convert the evalue threshold into a pvalue threshold
   log_pvalue_thresh = log(options.evalue_thresh) - log(motifN);
+  // if p-value threshold would be 1.0, reduce it slightly to
+  // prevent jillions of absolutely non-significant peaks being printed
+  if (log_pvalue_thresh >= 0) log_pvalue_thresh = log(0.999999999);
 
   // Setup some things for double strand scanning
   if (options.scan_both_strands == TRUE) {
@@ -1708,8 +1717,6 @@
   motif = rev_motif = NULL;
   pos_pssm = rev_pssm = NULL;
   scores = neg_scores = NULL;
-  // initialize Fisher Exact Test global log values
-  if (options.disc) init_FET(); 
 
   // calculate and output the best windows for each motif
   for (db_i = 0, i = 1; db_i < arraylst_size(options.motif_sources); db_i++) {
diff -r 5863bee1d071 -r 8041c82f059e src/display.c
--- a/src/display.c	Fri Dec 07 10:34:33 2012 +1000
+++ b/src/display.c	Thu Jan 31 12:04:26 2013 +1000
@@ -118,6 +118,12 @@
   char *id;
 } SORTED_SCORE;
 
+/* sortable letter value record */
+typedef struct {
+  char letter;
+  double value;
+} LETTER_VALUE;
+
 /* local functions */
 static void print_sites(
   DATASET *dataset, /* the dataset */
@@ -172,6 +178,10 @@
   const void *v1,
   const void *v2
 );
+static int lv_compare(
+  const void *v1,
+  const void *v2
+);
 static double get_q(
   int nsteps,         /* try nsteps from 0 to 1 */
   int window,         /* smoothing window radius */
@@ -1176,39 +1186,36 @@
   int alength = dataset->alength;
   char *alphabet = dataset->alphabet;
   char *string = NULL;
+  LETTER_VALUE *letterv = NULL;
 
+  
+  Resize(letterv, alength, LETTER_VALUE);
   Resize(string, w*N+2, char);
 
   for (i=0; i < w; i++) {   /* position in motif */
     int maxj[MAXDEPTH];     /* array of max indices in Theta */
 
-    /* find N letters at position i with highest probability (in order) */
-    for (n = 0; n < N; n++) {   /* current depth */
-      double max = LITTLE;    /* current max probability */
-      for (j=0; j < alength; j++) { /* letter */
-  if (theta(i, j) > max) {
-    max = theta(i, j);    /* maximum probability */
-    maxj[n] = j;      /* current letter with n-th best prob */
-  }
-      }
-      theta(i, maxj[n]) = -theta(i, maxj[n]); /* tag this position as used */
+    /* sort letters at position i, largest first */
+    for (j = 0; j < alength; j++) {
+      letterv[j].letter = alphabet[j];
+      letterv[j].value = theta(i, j);
     }
-
-    /* restore theta */
-    for (n = 0; n < N; n++) {   /* current depth */
-      theta(i, maxj[n]) = -theta(i, maxj[n]);   /* untag */
-    }
+    qsort(letterv, alength, sizeof(LETTER_VALUE), lv_compare);
 
     /* set up the consensus strings for position i */
     for (n = 0; n < N; n++) {       /* current depth */
-      if (theta(i, maxj[n]) < min_prob) {
-        string[(n*w)+i] = (n==0 ? 'x' : ' '); /* below cutoff */
-      } else {
-        string[(n*w)+i] = alphabet[maxj[n]];  /* set n'th consensus */
-      }
+      if (n < alength) {
+        if (letterv[n].value < min_prob) {
+          string[(n*w)+i] = (n==0 ? 'x' : ' '); /* below cutoff */
+        } else {
+          string[(n*w)+i] = letterv[n].letter;  /* set n'th consensus */
+        }
+      } else string[(n*w)+i] = ' ';      
     }
   }
-  string[((N-1)*w)+i] = '\0';     /* terminate string */
+  string[N*w] = '\0';     /* terminate string */
+  // cleanup
+  free(letterv);
 
   return string;
 } /* get_consensus */
@@ -1688,6 +1695,26 @@
   return ((diff > 0) ? -1 : ( (diff < 0) ? 1 : 0) );
 } /* s_compare */
 
+/**********************************************************************/
+/*
+        lv_compare
+
+        Compare two letter values in decending order
+*/
+/**********************************************************************/
+static int lv_compare(
+  const void *v1,
+  const void *v2
+)
+{
+  const LETTER_VALUE *lv1, *lv2;
+  lv1 = (const LETTER_VALUE *) v1;
+  lv2 = (const LETTER_VALUE *) v2;
+  if (lv1->value == lv2->value) return 0;
+  if (lv1->value < lv2->value) return 1;
+  return -1;
+} /* lv_compare */
+
 
 /**********************************************************************/
 /*
diff -r e77390759cae -r 61325860cd46 src/fisher_exact.c
--- a/src/fisher_exact.c	Thu Nov 22 18:53:34 2012 +1100
+++ b/src/fisher_exact.c	Tue Jan 22 18:14:22 2013 +1000
@@ -15,6 +15,12 @@
 #include <stdlib.h>
 #include "utils.h"
 
+//double _mm_nats;
+double _mm_nats = 0;
+double _log10;
+double _log0_99999999;
+double _log1_00000001;
+
 // Global constants for hypergeometric computation
 #define _log_zero (-1e10)		// Zero on the log scale.
 #define _log_small (-0.5e10)		// Threshold below which everything is zero
@@ -22,7 +28,7 @@
 
 // Routines for computing the logarithm of a sum in log space.
 #define my_exp(x) ( \
-  ((x) < _log_small) ? 0 : exp(x) \
+  ((x) < _log_small) ? 0.0 : exp(x) \
 )
 #define log_sum1(logx, logy) ( \
   ((logx) - (logy) > _mm_nats) ? (logx) : (logx) + log(1 + my_exp((logy) - (logx))) \
@@ -51,11 +57,6 @@
   double _log_sprob;
 } FISHER_VAL_T;
 
-double _log10;
-double _log0_99999999;
-double _log1_00000001;
-double _mm_nats;
-
 // Prototypes.
 double lngamm(int z);
 
@@ -80,7 +81,8 @@
   return exp(log_factorial[a + b] + log_factorial[c + d] + log_factorial[a + c] + log_factorial[b + d] - (log_factorial[a + b + c + d] + log_factorial[a] + log_factorial[b] + log_factorial[c] + log_factorial[d]));
 }
 
-void fisher_exact(int a, //x[0,0]
+void fisher_exact(
+    int a, //x[0,0]
     int b, //x[0,1]
     int c, //x[1,0]
     int d, //x[1,1]
@@ -109,7 +111,9 @@
     tmpc++;
     tmpd--;
     tmpp = fet(tmpa, tmpb, tmpc, tmpd);
-    if (tmpp <= *p)
+    // FIXED tlb: want prob pos succ >= observed
+    //if (tmpp <= *p)
+    if (tmpp < *p)
       *left += tmpp;
   }
 
@@ -125,10 +129,13 @@
     tmpc--;
     tmpd++;
     tmpp = fet(tmpa, tmpb, tmpc, tmpd);
-    if (tmpp <= *p)
+    // FIXED tlb: want prob pos succ <= observed
+    //if (tmpp <= *p)
+    if (tmpp < *p)
       *two += tmpp;
   }
 
+  // FIXED tlb: Now right is 1 - left - Pr(pos succ == observed)
   *right = 1 - *left + *p;
 }
 
@@ -155,12 +162,18 @@
   if (!((n1_i | n_1i | ni) != 0)) {
     if (!(n11i % 10 == 0)) {
       if (n11i == f_vals->_sn11 + 1) {
-        f_vals->_log_sprob = f_vals->_log_sprob + log(((f_vals->_sn1_ - f_vals->_sn11) / n11i) * ((f_vals->_sn_1 - f_vals->_sn11) / (n11i + f_vals->_sn - f_vals->_sn1_ - f_vals->_sn_1)));
+        f_vals->_log_sprob += 
+        // log ( ((_sn1_-_sn11)/float(n11i))*((_sn_1-_sn11)/float(n11i+_sn-_sn1_-_sn_1)) )
+         log(((f_vals->_sn1_ - f_vals->_sn11) / n11i) * ((f_vals->_sn_1 - f_vals->_sn11) 
+           / (n11i + f_vals->_sn - f_vals->_sn1_ - f_vals->_sn_1)));
         f_vals->_sn11 = n11i;
         return f_vals->_log_sprob;
       }
       if (n11i == f_vals->_sn11 - 1) {
-        f_vals->_log_sprob = f_vals->_log_sprob + log(((f_vals->_sn11) / (f_vals->_sn1_ - n11i)) * ((f_vals->_sn11 + f_vals->_sn - f_vals->_sn1_ - f_vals->_sn_1) / (f_vals->_sn_1 - n11i)));
+        f_vals->_log_sprob += 
+          //  log ( ((_sn11)/float(_sn1_-n11i))*((_sn11+_sn-_sn1_-_sn_1)/float(_sn_1-n11i)) )
+          log(((f_vals->_sn11) / (f_vals->_sn1_ - n11i)) * ((f_vals->_sn11 + f_vals->_sn - f_vals->_sn1_ - f_vals->_sn_1) 
+           / (f_vals->_sn_1 - n11i)));
         f_vals->_sn11 = n11i;
         return f_vals->_log_sprob;
       }
@@ -193,13 +206,16 @@
  * Returns Pr(green balls drawn >= b2)
  */
 static double log_getFETprob(int a1, int a2, int b1, int b2) {
+
   // initialize values
+  if (_mm_nats == 0) init_FET();
   FISHER_VAL_T *fisher_values = mm_malloc(sizeof(FISHER_VAL_T));
   fisher_values->_log_sprob = 0;
   fisher_values->_sn = 0;
   fisher_values->_sn11 = 0;
   fisher_values->_sn1_ = 0;
   fisher_values->_sn_1 = 0;
+
   double log_sless = _log_zero;
   double log_sright = _log_zero;
   double log_sleft = _log_zero;
@@ -209,12 +225,15 @@
   int col1 = a1 + b1;
   int max = row1;
 
+  if (a1+a2 == 0 || b1+b2 == 0) return(0); // p-value == 1 if no positive/negative samples
+  if (a1+b1 == 0 || a2+b2 == 0) return(0); // p-value == 1 if no successes/failures samples
+
   if (col1 < max) {
     max = col1;
   }
   int min = row1 + col1 - n;
-  if (min < 0)
-    min = 0;
+  if (min < 0) min = 0;
+  if (min == max) return(_log_zero);
 
   double log_prob_fisher = log_hyper0(a1, row1, col1, n, fisher_values);
   log_sleft = _log_zero;
@@ -226,6 +245,7 @@
     log_p = log_hyper(i, fisher_values);
     i = i + 1;
   }
+
   i = i - 1;
   if (log_p < _log1_00000001 + log_prob_fisher) {
     log_sleft = log_sum(log_sleft, log_p);
@@ -243,6 +263,7 @@
     log_p = log_hyper(j, fisher_values);
     j = j - 1;
   }
+
   j = j + 1;
   if (log_p < _log1_00000001 + log_prob_fisher) {
     log_sright = log_sum(log_sright, log_p);
@@ -258,7 +279,7 @@
   }
   else {
     log_sless = log(1.0 - exp(log_sright));
-    log_sless = (log_sless, log_prob_fisher);
+    log_sless = log_sum(log_sless, log_prob_fisher);
     log_slarg = log_sright;
   }
   free(fisher_values);
@@ -269,10 +290,9 @@
  getLogFETPvalue
 
  Return log of hypergeometric pvalue of # pos successes >= p.
- Don't forget to call init_FET() to initialize parameters before
- running this function
  */
-double getLogFETPvalue(double p, // positive successes
+double getLogFETPvalue(
+    double p, // positive successes
     double P, // positives
     double n, // negative successes
     double N, // negatives
@@ -290,3 +310,43 @@
 
   return (log_pvalue);
 } // getLogFETPvalue
+
+
+#ifdef FE_MAIN
+#include "general.h"
+int main(
+  int argc,
+  char** argv
+) {
+  int i = 1; 
+  int pos_succ = 0;
+  int pos = 0;
+  int neg_succ = 0;
+  int neg = 0;
+
+  DO_STANDARD_COMMAND_LINE(2,
+    USAGE(<pos_succ> <pos> <neg_succ> <neg> [options]);
+    NON_SWITCH(1,\r,
+      switch (i++) {
+        case 1: pos_succ = atoi(_OPTION_); break;
+        case 2: pos = atoi(_OPTION_); break;
+        case 3: neg_succ = atoi(_OPTION_); break;
+        case 4: neg = atoi(_OPTION_); break;
+        default: COMMAND_LINE_ERROR;
+      }
+    );
+    USAGE(\n\tCompute the Fisher Exact test p-value:);
+    USAGE(\n\t\tPr(#pos_succ > pos_succ));
+  );
+
+  double log_pvalue = log_getFETprob(neg - neg_succ, neg_succ, pos - pos_succ, pos_succ);
+  printf("log_p %.2e p %.2e\n", log_pvalue, exp(log_pvalue));
+
+  //fisher_exact_init(pos+neg);
+  //double p1, p2, p3, p4;
+  //fisher_exact(neg - neg_succ, neg_succ, pos - pos_succ, pos_succ, &p1, &p2, &p3, &p4);
+  //printf("p1 %.2e p2 %.2e p3 %.2e p4 %.2e\n", p1, p2, p3, p4);
+
+  return(0);
+}
+#endif
diff -r e77390759cae -r 61325860cd46 src/json-writer.c
--- a/src/json-writer.c	Thu Nov 22 18:53:34 2012 +1100
+++ b/src/json-writer.c	Tue Jan 22 18:14:22 2013 +1000
@@ -192,7 +192,11 @@
       break;
     default:
       // check if a control character
-      if (codepoint <= 0x1F || (codepoint >= 0x7F && codepoint <= 0x9F)) {
+      // or if line seperator (U+2028) or if paragraph separator (U+2029)
+      // the latter two are valid JSON but not valid Javascript as Javascript
+      // can't have unescaped newline characters in a string.
+      if (codepoint <= 0x1F || (codepoint >= 0x7F && codepoint <= 0x9F) || 
+          codepoint == 0x2028 || codepoint == 0x2029) {
         str_appendf(storage, "\\u%.04x", codepoint);
       } else {
         str_append(storage, c, bytes);
diff -r e77390759cae -r 61325860cd46 src/pssm.c
--- a/src/pssm.c	Thu Nov 22 18:53:34 2012 +1100
+++ b/src/pssm.c	Tue Jan 22 18:14:22 2013 +1000
@@ -616,7 +616,7 @@
   MHMM_T*  the_hmm     		// The HMM.
 )
 {
-  int i;
+  int i, len;
   int i_motif = the_hmm->states[i_state].i_motif;	// Name of motif.
   MHMM_STATE_T *start_state = the_hmm->states + i_state;// Starting state of motif.
   ALPH_T alph = the_hmm->alph;
@@ -673,7 +673,12 @@
       }
     }
     // Find minimum motif score whose p-value is < p_threshold.
-    for (i=0; get_array_item((int) i, start_state->pssm->pv) > p_threshold; i++);
+    len = get_array_length(start_state->pssm->pv);
+    for (i=0; i < len && get_array_item((int) i, start_state->pssm->pv) > p_threshold; i++);
+    if (i == len) {
+      fprintf(stderr, "Warning: Motif %s has no scores with p-value < p-value threshold (%.2g)\n",
+          the_hmm->states[i_state].motif_id, p_threshold);
+    }
     start_state->min_sig_score = i-1;
     free_array(background);
   }
diff -r e77390759cae -r 61325860cd46 src/seq.c
--- a/src/seq.c	Thu Nov 22 18:53:34 2012 +1100
+++ b/src/seq.c	Tue Jan 22 18:14:22 2013 +1000
@@ -417,7 +417,7 @@
   // Make a smaller copy of the raw sequence.
   assert(offset > 0);
   assert(offset <= sequence->length);
-  smaller_sequence = (char*)mm_malloc((offset + 1) * sizeof(char));
+  smaller_sequence = (char*)mm_malloc((sequence->length - offset + 1) * sizeof(char));
   strcpy(smaller_sequence, &(sequence->sequence[offset]));
   assert((int)strlen(smaller_sequence) == (sequence->length - offset));
 
diff -r e77390759cae -r 61325860cd46 tests/dreme/norc.xml
--- a/tests/dreme/norc.xml	Thu Nov 22 18:53:34 2012 +1100
+++ b/tests/dreme/norc.xml	Tue Jan 22 18:14:22 2013 +1000
@@ -65,10 +65,10 @@
 <!ATTLIST run_time
   cpu CDATA #REQUIRED real CDATA #REQUIRED stop (evalue|count|time) #REQUIRED>
 ]>
-<dreme version="4.8.0" release="Fri 11 Nov 2011 10:59:55 EST">
+<dreme version="4.9.0" release="Mon Nov  5 13:41:39 PST 2012">
   <model>
     <command_line>dreme -norc -oc results/dreme -v 1 -noxslt -p Klf1-200-100.s</command_line>
-    <positives name="Klf1-200-100" count="169" file="Klf1-200-100.s" last_mod_date="Wed Jan 11 07:49:19 EST 2012" />
+    <positives name="Klf1-200-100" count="169" file="Klf1-200-100.s" last_mod_date="Mon Oct 29 12:22:10 PDT 2012" />
     <negatives name="shuffled positive sequences" count="169" from="shuffled"/>
     <background type="dna" A="0.244" C="0.253" G="0.250" T="0.253" from="dataset"/>
     <stop evalue="0.05"/>
@@ -76,33 +76,33 @@
     <ngen>100</ngen>
     <add_pv_thresh>0.01</add_pv_thresh>
     <seed>1</seed>
-    <host>tlb-kamikaze-lt.imb.uq.edu.au</host>
-    <when>Thu Jan 12 17:37:55 EST 2012</when>
+    <host>d-173-250-141-199.dhcp4.washington.edu</host>
+    <when>Wed Jan 09 16:41:51 PST 2013</when>
   </model>
   <motifs>
-    <motif id="m01" seq="WGATAA" length="6" nsites="56" p="32" n="3" pvalue="5.4e-008" evalue="1.3e-003" unerased_evalue="1.3e-003">
-      <pos i="1" A="0.616667" C="0.000000" G="0.000000" T="0.350000"/>
-      <pos i="2" A="0.000000" C="0.000000" G="0.950000" T="0.000000"/>
-      <pos i="3" A="0.950000" C="0.000000" G="0.000000" T="0.000000"/>
-      <pos i="4" A="0.000000" C="0.000000" G="0.000000" T="0.950000"/>
-      <pos i="5" A="0.950000" C="0.000000" G="0.000000" T="0.000000"/>
-      <pos i="6" A="0.950000" C="0.000000" G="0.000000" T="0.000000"/>
+    <motif id="m01" seq="WGATAA" length="6" nsites="34" p="32" n="3" pvalue="5.4e-008" evalue="1.3e-003" unerased_evalue="1.3e-003">
+      <pos i="1" A="0.676471" C="0.000000" G="0.000000" T="0.323529"/>
+      <pos i="2" A="0.000000" C="0.000000" G="1.000000" T="0.000000"/>
+      <pos i="3" A="1.000000" C="0.000000" G="0.000000" T="0.000000"/>
+      <pos i="4" A="0.000000" C="0.000000" G="0.000000" T="1.000000"/>
+      <pos i="5" A="1.000000" C="0.000000" G="0.000000" T="0.000000"/>
+      <pos i="6" A="1.000000" C="0.000000" G="0.000000" T="0.000000"/>
       <match seq="AGATAA" p="22" n="2" pvalue="9.8e-006" evalue="2.3e-001"/>
       <match seq="TGATAA" p="11" n="1" pvalue="2.8e-003" evalue="6.6e+001"/>
       <match seq="AGATAA" p="13" n="2" pvalue="3.1e-003" evalue="7.4e+001"/>
     </motif>
-    <motif id="m02" seq="GGGYGT" length="6" nsites="71" p="33" n="5" pvalue="6.0e-007" evalue="1.4e-002" unerased_evalue="1.4e-002">
-      <pos i="1" A="0.000000" C="0.000000" G="0.960000" T="0.000000"/>
-      <pos i="2" A="0.000000" C="0.000000" G="0.960000" T="0.000000"/>
-      <pos i="3" A="0.000000" C="0.000000" G="0.960000" T="0.000000"/>
-      <pos i="4" A="0.000000" C="0.333333" G="0.000000" T="0.640000"/>
-      <pos i="5" A="0.000000" C="0.000000" G="0.960000" T="0.000000"/>
-      <pos i="6" A="0.000000" C="0.000000" G="0.000000" T="0.960000"/>
+    <motif id="m02" seq="GGGYGT" length="6" nsites="35" p="33" n="5" pvalue="6.0e-007" evalue="1.4e-002" unerased_evalue="1.4e-002">
+      <pos i="1" A="0.000000" C="0.000000" G="1.000000" T="0.000000"/>
+      <pos i="2" A="0.000000" C="0.000000" G="1.000000" T="0.000000"/>
+      <pos i="3" A="0.000000" C="0.000000" G="1.000000" T="0.000000"/>
+      <pos i="4" A="0.000000" C="0.400000" G="0.000000" T="0.600000"/>
+      <pos i="5" A="0.000000" C="0.000000" G="1.000000" T="0.000000"/>
+      <pos i="6" A="0.000000" C="0.000000" G="0.000000" T="1.000000"/>
       <match seq="GGGTGT" p="23" n="5" pvalue="2.8e-004" evalue="6.4e+000"/>
       <match seq="GGGTGT" p="20" n="4" pvalue="5.2e-004" evalue="1.2e+001"/>
       <match seq="GGGCGT" p="13" n="1" pvalue="7.5e-004" evalue="1.7e+001"/>
       <match seq="GGGCGT" p="10" n="1" pvalue="5.2e-003" evalue="1.2e+002"/>
     </motif>
   </motifs>
-  <run_time cpu="4.23" real="4.31" stop="evalue"/>
+  <run_time cpu="3.34" real="3.34" stop="evalue"/>
 </dreme>
diff -r e77390759cae -r 61325860cd46 tests/meme/meme.crp0.zoops
--- a/tests/meme/meme.crp0.zoops	Thu Nov 22 18:53:34 2012 +1100
+++ b/tests/meme/meme.crp0.zoops	Tue Jan 22 18:14:22 2013 +1000
@@ -1,7 +1,7 @@
 ********************************************************************************
 MEME - Motif discovery tool
 ********************************************************************************
-MEME version 4.8.1 (Release date: Wed Feb 22 11:51:06 EST 2012)
+MEME version 4.9.0 (Release date: Wed Dec 12 10:31:40 EST 2012)
 
 For further information on how to interpret these results or to get
 a copy of the MEME software please access http://meme.nbcr.net.
@@ -226,13 +226,13 @@
 --------------------------------------------------------------------------------
 	Motif 1 regular expression
 --------------------------------------------------------------------------------
-[AT][AT][TAG]TGTGA[CGT][GA][TC][ATCGC]G[AT]TC[AG][CA]
+[AT][AT][TAG]TGTGA[CGT][GA][TC][ATCG]G[AT]TC[AG][CA]
 --------------------------------------------------------------------------------
 
 
 
 
-Time  2.57 secs.
+Time  4.55 secs.
 
 ********************************************************************************
 
@@ -331,7 +331,7 @@
 
 
 
-Time  4.11 secs.
+Time  7.40 secs.
 
 ********************************************************************************
 
@@ -374,6 +374,6 @@
 Stopped because nmotifs = 2 reached.
 ********************************************************************************
 
-CPU: tlb-squirrel
+CPU: unknown
 
 ********************************************************************************
diff -r e77390759cae -r 61325860cd46 website/cgi-bin/centrimo.pl
--- a/website/cgi-bin/centrimo.pl	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/cgi-bin/centrimo.pl	Tue Jan 22 18:14:22 2013 +1000
@@ -131,10 +131,8 @@
   my %d = ();
   # get the local enrichment option
   $d{LOCAL} = $utils->param_bool($q, 'local');
-  # get the discriminative search option
-  $d{DISCR} = $utils->param_bool($q, 'discr');
-  # check if we should require the negative sequences
-  $d{NEGS_ALWAYS} = $utils->param_bool($q, 'negs_always');
+  # get the search option
+  $d{COMPAR} = $utils->param_bool($q, 'compar');
   # get the input sequences
   my $seqsfh = $q->upload('sequences');
   my $pasted = $utils->param_bool($q, 'use_pasted');
@@ -146,17 +144,17 @@
   $d{SEQ_ORIG_NAME} = ($pasted ? $name : fileparse($q->param('sequences')));
   $d{SEQ_NAME} = get_safe_name($d{SEQ_ORIG_NAME}, $name, 2);
   # get the comparative sequences
-  if ($d{DISCR} || $d{NEGS_ALWAYS}) {
-    my $discr_seqs_fh = $q->upload('discr_sequences');
-    my $discr_pasted = $utils->param_bool($q, 'use_discr_pasted');
+  if ($d{COMPAR}) {
+    my $compar_seqs_fh = $q->upload('compar_sequences');
+    my $compar_pasted = $utils->param_bool($q, 'use_compar_pasted');
     ( $d{D_SEQ_DATA}, undef, $d{D_SEQ_COUNT}, $d{D_SEQ_MIN}, $d{D_SEQ_MAX},
       $d{D_SEQ_AVG}, $d{D_SEQ_TOTAL}
-    ) = $utils->get_sequence_data(scalar $q->param('discr_pasted_sequences'),
-          $discr_seqs_fh, PASTE => $discr_pasted);
+    ) = $utils->get_sequence_data(scalar $q->param('compar_pasted_sequences'),
+          $compar_seqs_fh, PASTE => $compar_pasted);
     # get the input sequences name
-    my $discr_name = 'neg_sequences';
-    $d{D_SEQ_ORIG_NAME} = ($pasted ? $name : fileparse($q->param('discr_sequences')));
-    $d{D_SEQ_NAME} = get_safe_name($d{SEQ_ORIG_NAME}, $discr_name, 2);
+    my $compar_name = 'neg_sequences';
+    $d{D_SEQ_ORIG_NAME} = ($pasted ? $name : fileparse($q->param('compar_sequences')));
+    $d{D_SEQ_NAME} = get_safe_name($d{SEQ_ORIG_NAME}, $compar_name, 2);
     if ($d{D_SEQ_NAME} eq $d{SEQ_NAME}) {
       $d{SEQ_NAME} .= '1';
       $d{D_SEQ_NAME} .= '2';
@@ -206,7 +204,6 @@
   my ($data) = @_;
   my @args = ();
   push(@args, '--local') if ($data->{LOCAL});
-  push(@args, '--discr') if ($data->{DISCR});
   push(@args, '--score', $data->{MIN_SCORE}) if (defined($data->{MIN_SCORE}));
   push(@args, '--optsc') if ($data->{OPT_SCORE});
   push(@args, '--ethresh', $data->{ETHRESH}) if (defined($data->{ETHRESH}));
@@ -233,7 +230,7 @@
   #fill in parameters
   $template->param(description => $data->{DESCRIPTION});
   $template->param(local => $data->{LOCAL});
-  $template->param(discr => $data->{DISCR});
+  $template->param(compar => $data->{COMPAR});
   $template->param(norc => $data->{STRANDS} eq 'given');
   $template->param(flip => $data->{STRANDS} eq 'both_flip');
   $template->param(min_score => $data->{MIN_SCORE});
@@ -251,7 +248,7 @@
   $template->param(seq_avg => $data->{SEQ_AVG});
   $template->param(seq_total => $data->{SEQ_TOTAL});
 
-  # discriminative sequence information:
+  # comparative sequence information:
   if (defined($data->{D_SEQ_NAME})) {
     $template->param(d_seq_orig_name => $data->{D_SEQ_ORIG_NAME});
     $template->param(d_seq_name => $data->{D_SEQ_NAME});
@@ -298,7 +295,7 @@
   my @infilelist = ();
   # Sequences file
   push(@infilelist, InputFileType->new($data->{SEQ_NAME}, $data->{SEQ_DATA}));
-  # Discriminative Sequences file
+  # Comparative Sequences file
   push(@infilelist, InputFileType->new($data->{D_SEQ_NAME}, $data->{D_SEQ_DATA})) if $data->{D_SEQ_NAME};
   # Uploaded database
   push(@infilelist, InputFileType->new($data->{UPMOT_NAME}, $data->{UPMOT_DATA})) if $data->{UPMOT_NAME};
diff -r e77390759cae -r 61325860cd46 website/cgi-bin/centrimo.tmpl
--- a/website/cgi-bin/centrimo.tmpl	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/cgi-bin/centrimo.tmpl	Tue Jan 22 18:14:22 2013 +1000
@@ -24,12 +24,14 @@
       <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
     </div>
 
-    <div class="pop_content" id="pop_discr">
+    <div class="pop_content" id="pop_compar">
       <p>The binomial test compares the number of sequences that had their best
       matches in the region to the expected number of sequences under the assumption
       that matches would be randomly distributed.</p>
-      <p>The Fisher exact test compares the number of sequences which have their
-      best matches in the region to the number found in a discriminative set.</p>
+      <p>Adding a second comparative dataset allows use of the Fisher exact test
+      (FET) to sort the regions found by the binomial test. The FET compares the
+      number of sequences that have their best matches in the region to the
+      number found in the comparative set.</p>
       <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
     </div>
 
@@ -42,7 +44,7 @@
       <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
     </div>
 
-    <div class="pop_content" id="pop_discr_sequences" >
+    <div class="pop_content" id="pop_compar_sequences" >
       <p>Select a file of <a href="../doc/fasta-format.html">FASTA formatted</a>
       DNA sequences or paste in actual <a href="../doc/fasta-format.html"
       >FASTA formatted</a> DNA sequences to compare to the other sequence set.</p>
@@ -124,12 +126,6 @@
       <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
     </div>
 
-    <div class="pop_content" id="pop_negs_always">
-      <p>This option enables you to graph a comparative set of sequences against
-      the set under test without using the Fisher exact test.</p>
-      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
-    </div>
-
     <div class="pop_content" id="pop_store_ids">
       <p>This option enables you to store the sequence identifies which have
       their best match in the best region for each motif. This option can
@@ -185,13 +181,13 @@
               <!-- enrichment method-->
               <h2 class="meme">Select how enrichment is determined</h2>
               <div class="subcontent">
-                <input type="radio" class="meme" name="discr" id="discr_off"
-                  value="0" onclick="update_discr()" checked>
-                <label for="discr_off">Binomial Test</label>
-                <input type="radio" class="meme" name="discr" id="discr_on"
-                  value="1" onclick="update_discr()">
-                <label for="discr_on">Fisher Exact Test (discriminative)</label>
-                <div class="help" onclick="help_popup(this, 'pop_discr')"></div>
+                <input type="radio" class="meme" name="compar" id="compar_off"
+                  value="0" onclick="update_compar()" checked>
+                <label for="compar_off">Binomial Test</label>
+                <input type="radio" class="meme" name="compar" id="compar_on"
+                  value="1" onclick="update_compar()">
+                <label for="compar_on">Binomial Test + Fisher Exact Test (comparative)</label>
+                <div class="help" onclick="help_popup(this, 'pop_compar')"></div>
               </div>
               <!-- /enrichment method -->
 
@@ -211,18 +207,18 @@
               <!-- /sequences -->
 
               <!-- comparative sequences -->
-              <div id="discr_sequences_area" style="display:none">
+              <div id="compar_sequences_area" style="display:none">
               <h2 class="meme">Input the comparative sequences</h2>
               <div class="subcontent">
                 <h4 class="meme">Enter DNA sequences for comparing motif locality
-                <div class="help" onclick="help_popup(this, 'pop_discr_sequences')"></div></h4>
-                <input type="file" class="meme" name="discr_sequences" id="discr_sequences"/>
+                <div class="help" onclick="help_popup(this, 'pop_compar_sequences')"></div></h4>
+                <input type="file" class="meme" name="compar_sequences" id="compar_sequences"/>
                 or
-                <input type="checkbox" class="meme" name="use_discr_pasted" id="use_discr_pasted" value="1"
-                onclick="discr_pasted_sequences_enable(this.checked)"/>
-                <label for="use_discr_pasted">paste the sequences</label>
+                <input type="checkbox" class="meme" name="use_compar_pasted" id="use_compar_pasted" value="1"
+                onclick="compar_pasted_sequences_enable(this.checked)"/>
+                <label for="use_compar_pasted">paste the sequences</label>
                 <textarea class="meme" rows="5" cols="60" style="padding-top:5px; display: none;" 
-                    name="discr_pasted_sequences" id="discr_pasted_sequences"></textarea>
+                    name="compar_pasted_sequences" id="compar_pasted_sequences"></textarea>
               </div>
               </div>
               <!-- /comparative sequences -->
@@ -324,12 +320,6 @@
                       name="ethresh" size="5" value="10" min="0" step="any">
                   <div class="help" onclick="help_popup(this, 'pop_evalue_threshold')"></div>
                   
-                  <h3 class="meme">Allow comparative sequences for binomial test?</h3>
-                  <input class="meme" type="checkbox" id="negs_always"
-                    name="negs_always" value="1" onclick="update_discr()">
-                  <label for="negs_always">Always allow comparative sequences</label>
-                  <div class="help" onclick="help_popup(this, 'pop_negs_always')"></div>
-                  
                   <h3 class="meme">Include sequence IDs</h3>
                   <input class="meme" type="checkbox" name="store_ids" id="store_ids" value="1" checked>
                   <label for="store_ids">Include a list of matching sequence ids</label>
diff -r e77390759cae -r 61325860cd46 website/cgi-bin/centrimo_verify.tmpl
--- a/website/cgi-bin/centrimo_verify.tmpl	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/cgi-bin/centrimo_verify.tmpl	Tue Jan 22 18:14:22 2013 +1000
@@ -27,9 +27,9 @@
   <td>Central regions</td></tr>
   <!-- /TMPL_IF -->
 
-  <!-- TMPL_IF NAME=discr -->
+  <!-- TMPL_IF NAME=compar -->
   <tr><td class="table_label">Enrichment Test</td>
-  <td>Fisher Exact Test (discriminative)</td></tr>
+  <td>Binomial Test + Fisher Exact Test (comparative)</td></tr>
   <!-- TMPL_ELSE -->
   <tr><td class="table_label">Enrichment Test</td>
   <td>Binomial Test</td></tr>
diff -r e77390759cae -r 61325860cd46 website/cgi-bin/meme-chip.pl
--- a/website/cgi-bin/meme-chip.pl	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/cgi-bin/meme-chip.pl	Tue Jan 22 18:14:22 2013 +1000
@@ -193,6 +193,8 @@
   # get the maximum central enrichment E-value to report
   $d{CENTRIMO_ETHRESH} = $utils->param_num($q, 'centrimo_ethresh', 'CentriMo E-value threshold', 0, undef, 10);
   # get if the seq IDs should be stored
+  $d{CENTRIMO_LOCAL} = $utils->param_bool($q, 'centrimo_local');
+  # get if the seq IDs should be stored
   $d{CENTRIMO_STORE_IDS} = $utils->param_bool($q, 'centrimo_store_ids');
 
   return \%d;
@@ -224,6 +226,7 @@
   push(@args, '-centrimo-score', $data->{CENTRIMO_SCORE});
   push(@args, '-centrimo-maxreg', $data->{CENTRIMO_MAXREG}) if (defined($data->{CENTRIMO_MAXREG}));
   push(@args, '-centrimo-ethresh', $data->{CENTRIMO_ETHRESH});
+  push(@args, '-centrimo-local') if $data->{CENTRIMO_LOCAL};
   push(@args, '-centrimo-noseq') unless $data->{CENTRIMO_STORE_IDS};
   # sequences and motif dbs
   push(@args, $data->{SEQ_NAME}, $data->{DBMOT_DBS});
@@ -279,6 +282,7 @@
   $template->param(centrimo_score => $data->{CENTRIMO_SCORE});
   $template->param(centrimo_maxreg => $data->{CENTRIMO_MAXREG});
   $template->param(centrimo_ethresh => $data->{CENTRIMO_ETHRESH});
+  $template->param(centrimo_local => $data->{CENTRIMO_LOCAL});
   $template->param(centrimo_store_ids => $data->{CENTRIMO_STORE_IDS});
 
   return $template->output;
diff -r e77390759cae -r 61325860cd46 website/cgi-bin/meme-chip.tmpl
--- a/website/cgi-bin/meme-chip.tmpl	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/cgi-bin/meme-chip.tmpl	Tue Jan 22 18:14:22 2013 +1000
@@ -179,6 +179,13 @@
       <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
     </div>
 
+    <div class="pop_content" id="pop_centrimo_local">
+      <p>This option causes all regions up to the maximum region size to be
+      considered even if they are not in the center. This can be useful with
+      non-symetric data.</p>
+      <div class="pop_close">[ <a href="javascript:help_popup()">close</a> ]</div>
+    </div>
+
     <div class="pop_content" id="pop_centrimo_store_ids">
       <p>This option enables you to store the sequence identifies which have
       their best match in the best region for each motif. This option can
@@ -287,7 +294,7 @@
               </div>
               <div>
                 <h3 class="meme top">Scan both DNA strands?</h3>
-                <input class="meme" type="checkbox" 
+                <input class="meme" type="checkbox" onclick="on_ch_norc()"
                 id="norc" name="norc" value="1">
                 <label for="norc">scan given strand only</label>
                 <div class="help" onclick="help_popup(this, 'pop_norc')"></div>
@@ -439,6 +446,12 @@
                 id="centrimo_ethresh">
                 <div class="help" onclick="help_popup(this, 'pop_centrimo_ethresh')"></div>
                   
+                <h3 class="meme">Find uncentered regions</h3>
+                <input class="meme" type="checkbox" name="centrimo_local"
+                  id="centrimo_local" value="1">
+                <label for="centrimo_local">Run CentriMo in local mode to find uncentered regions</label>
+                <div class="help" onclick="help_popup(this, 'pop_centrimo_local')"></div>
+
                 <h3 class="meme">Include sequence IDs</h3>
                 <input class="meme" type="checkbox" name="centrimo_store_ids" 
                     id="centrimo_store_ids" value="1" checked>
diff -r e77390759cae -r 61325860cd46 website/cgi-bin/meme-chip_verify.tmpl
--- a/website/cgi-bin/meme-chip_verify.tmpl	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/cgi-bin/meme-chip_verify.tmpl	Tue Jan 22 18:14:22 2013 +1000
@@ -76,11 +76,13 @@
   <tr><td class="table_label">Minimum Site Score</td>
   <td><!-- TMPL_VAR NAME=centrimo_score --></td></tr>
   <!-- TMPL_IF NAME=centrimo_maxreg -->
-  <tr><td class="table_label">Maximum Central Region</td>
+  <tr><td class="table_label">Maximum Region</td>
   <td><!-- TMPL_VAR NAME=centrimo_maxreg --></td></tr>
   <!-- /TMPL_IF -->
   <tr><td class="table_label">E-value Threshold</td>
   <td><!-- TMPL_VAR NAME=centrimo_ethresh --></td></tr>
+  <tr><td class="table_label">Allow Uncentered Regions</td>
+  <td><!-- TMPL_IF NAME=centrimo_local -->Enabled<!-- TMPL_ELSE -->Disabled<!-- /TMPL_IF --></td></tr>
   <tr><td class="table_label">Store Sequence IDs</td>
   <td><!-- TMPL_IF NAME=centrimo_store_ids -->Enabled<!-- TMPL_ELSE -->Disabled<!-- /TMPL_IF --></td></tr>
 </table>
diff -r e77390759cae -r 61325860cd46 website/html/centrimo.js
--- a/website/html/centrimo.js	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/html/centrimo.js	Tue Jan 22 18:14:22 2013 +1000
@@ -6,9 +6,9 @@
 
 function on_page_show() {
   pasted_sequences_enable($('use_pasted').checked);
-  discr_pasted_sequences_enable($('use_discr_pasted').checked);
+  compar_pasted_sequences_enable($('use_compar_pasted').checked);
   upload_secondaries_enable($('motif_db').value == 'upload');
-  update_discr();
+  update_compar();
   $("max_region").disabled = !$("use_max_region").checked;
   toggle_class($('adv_opts'), 'expanded', adv_changed());
 }
@@ -58,15 +58,13 @@
   $('pasted_sequences').style.display = (enable ? 'block' : 'none');
 }
 
-function update_discr() {
-  var enable;
-  enable = $('negs_always').checked || $('discr_on').checked;
-  $('discr_sequences_area').style.display = (enable ? 'block' : 'none');
+function update_compar() {
+  $('compar_sequences_area').style.display = ($('compar_on').checked ? 'block' : 'none');
 }
 
-function discr_pasted_sequences_enable(enable) {
-  $('discr_sequences').disabled = enable;
-  $('discr_pasted_sequences').style.display = (enable ? 'block' : 'none');
+function compar_pasted_sequences_enable(enable) {
+  $('compar_sequences').disabled = enable;
+  $('compar_pasted_sequences').style.display = (enable ? 'block' : 'none');
 }
 
 function check() {
@@ -81,14 +79,14 @@
       return false;
     }
   }
-  if ($("discr_on").checked || $("negs_always").checked) {
-    if (!$('use_discr_pasted').checked) {
-      if ($('discr_sequences').value == '') {
+  if ($("compar_on").checked) {
+    if (!$('use_compar_pasted').checked) {
+      if ($('compar_sequences').value == '') {
         alert("Please input a file of FASTA formatted sequences for the comparative set.\n");
         return false;
       }
     } else {
-      if ($('discr_pasted_sequences').value == '') {
+      if ($('compar_pasted_sequences').value == '') {
         alert("Please input FASTA formatted sequences for the comparative set.\n");
         return false;
       }
@@ -146,7 +144,6 @@
   if ($("opt_score").checked) return true;
   if ($("use_max_region").checked) return true;
   if (!/^\s*10\s*$/.test($("ethresh").value)) return true;
-  if ($("negs_always").checked) return true;
   if (!$("store_ids").checked) return true;
   return false;
 }
@@ -164,8 +161,7 @@
   $("max_region").disabled = true;
   $("max_region").value = 200;
   $("ethresh").value = 10;
-  $("negs_always").checked = false;
   $("store_ids").checked = true;
   toggle_class($('adv_opts'), 'modified', false);
-  update_discr();
+  update_compar();
 }
diff -r e77390759cae -r 61325860cd46 website/html/downloads.html
--- a/website/html/downloads.html	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/html/downloads.html	Tue Jan 22 18:14:22 2013 +1000
@@ -31,7 +31,7 @@
             <h2><a shape="rect" href="meme-download.html">Download MEME Suite Software and Databases</a></h2>
             <h2><a shape="rect" href="doc/meme-install.html">Installation Guide</a></h2>
             <h2><a shape="rect" href="COPYRIGHT.html">Copyright</a></h2>
-            <h2><a shape="rect" href="http://invent.ucsd.edu/technology/cases/2002/SD2002-802.shtml">Commercial Licenses</a></h2>
+            <h2><a shape="rect" href="http://invent.ucsd.edu/technology/cases/2010/documents/MEME4_0_Jun_28_2011.pdf">Commercial Licenses</a></h2>
 	   <!-- Add when we have separate up-to-date GLAM2 distro mechanism
             <h2><a shape="rect" href="http://bioinformatics.org.au/glam2/archive/">Download GLAM2/GLAM2SCAN software separately</a></h2>
            -->
diff -r e77390759cae -r 61325860cd46 website/html/meme-chip.js
--- a/website/html/meme-chip.js	Thu Nov 22 18:53:34 2012 +1100
+++ b/website/html/meme-chip.js	Tue Jan 22 18:14:22 2013 +1000
@@ -198,6 +198,7 @@
   if (!/^\s*5\s*$/.test($("centrimo_score").value)) return true;
   if ($("centrimo_maxreg_enable").checked) return true;
   if (!/^\s*10\s*$/.test($("centrimo_ethresh").value)) return true;
+  if ($("centrimo_local").checked) return true;
   if (!$("centrimo_store_ids").checked) return true;
   return false;
 }
@@ -211,7 +212,8 @@
   $("centrimo_maxreg").value = 200;
   $("centrimo_maxreg").disabled = true;
   $("centrimo_ethresh").value = 10;
-  $("centrimo_store_ids").checked = false;
+  $("centrimo_local").checked = false;
+  $("centrimo_store_ids").checked = true;
 
   toggle_class($('centrimo_opts'), 'modified', false);
 }
@@ -258,6 +260,17 @@
   $("meme_sites").style.display = ($('meme_dist').value == 'oops' ? 'none' : 'block');
 }
 
+function on_ch_norc() {
+  var norc = $("norc").checked;
+  var centrimo_local = $("centrimo_local").checked;
+  if (norc && !centrimo_local) {
+    if (confirm("CentriMo's localized search works well with this option. Enable it now?")) {
+      $("centrimo_local").checked = true;
+      toggle_class($('centrimo_opts'), 'expanded', true);
+    }
+  }
+}
+
 function on_ch_bfile() {
   if (window.File && window.FileReader && window.FileList) {
     var input = $("bfile");
diff -r 5863bee1d071 -r b6a55daaf534 website/html/meme-download.html
--- a/website/html/meme-download.html	Fri Dec 07 10:34:33 2012 +1000
+++ b/website/html/meme-download.html	Fri Jan 25 11:34:30 2013 +1000
@@ -27,46 +27,40 @@
               <br />
               Javascript doesn't seem to be available on your browser.
             </noscript>
-            <form enctype="multipart/form-data" method="post"
-                  action="cgi-bin/process_request.cgi">
 
-            <h1>Download Software / View Command Line Options (Man Pages)</h1>
+            <h1>Download Software</h1>
 
             <p>The MEME Suite software is available for FREE 
             <a href="http://meme.nbcr.net">interactive use</a> via the web.</p>
-            <p>
-            Alternatively, you can download the software for installation and
+            
+            <p>Alternatively, you can <a href="http://ebi.edu.au/ftp/software/MEME/index.html"
+            >download the software</a> for installation and
             <b>non-profit use</b> on your own computer.  Please read the
             <a href="COPYRIGHT.html">Copyright</a> for terms and
-            conditions before downloading the software.  <b>For-profit</b> licenses
-            are also available; click
-            <a href="http://invent.ucsd.edu/technology/cases/2002/SD2002-802.shtml">
-            here</a> for details.</p>
-            <p>
-            The downloadable software includes the complete source code for the MEME suite,
-            and instructions on how to install and test them. The online installation 
-            guide is <a href="doc/meme-install.html">Installation instructions</a>.</p>
+            conditions before downloading the software. <b>For-profit</b>
+            licenses are also available; click <a 
+            href="http://invent.ucsd.edu/technology/cases/2010/documents/MEME4_0_Jun_28_2011.pdf"
+            >here</a> for details.</p>
 
-            <p>When you install the MEME Suite software on your own
-            computer, you can use many features not available with the interactive
-            versions.  You can click on the "Man Page" buttons below to see all of the
-            features of programs available in the downloadable versions.</p>
+            <p>The downloadable software includes the complete source code for
+            the MEME suite, and instructions on how to install and test them.
+            The online installation guide is <a href="doc/meme-install.html"
+            >Installation instructions</a>.</p>
+
+            <p>When you install the MEME Suite software on your own computer,
+            you can use many features not available with the interactive
+            versions. Refer to the <a href="doc/overview.html"
+            >commmand-line documentation</a> for information on these
+            features.</p>
 
             <ul>
-            <li> <a href="http://meme.nbcr.net/downloads/">Download the MEME Suite source code</a></li>
-            <li> <a href="http://meme.nbcr.net/downloads/databases">Download databases for use with the MEME Suite</a></li>
+            <li> <a href="http://ebi.edu.au/ftp/software/MEME/index.html">Download the MEME Suite source code and databases</a></li>
             <li> <a href="doc/meme-install.html">Installation Guide</a></li>
             <li> <a href="COPYRIGHT.html">Copyright</a></li>
             <li> <a href="http://invent.ucsd.edu/technology/cases/2010/documents/MEME4_0_Jun_28_2011.pdf">License [PDF]</a> (for-profit only)</li>
-            <li> <a href="doc/meme.html">View MEME man page</a></li>
-            <li> <a href="doc/glam2_man.html">View GLAM2 man page</a></li>
-            <li> <a href="doc/mast.html">View MAST man page</a></li>
-            <li> <a href="doc/fimo.html">View FIMO man page</a></li>
-            <li> <a href="doc/glam2scan_man.html">View GLAM2SCAN man page</a></li>
-            <li> <a href="doc/tomtom.html">View Tomtom man page</a></li>
+            <li> <a href="doc/overview.html">View command-line documentation</a></li>
             </ul>
 
-            </form>
             <script type="text/javascript">make_footer('');</script>
           </div>
         </td>
diff -r 5863bee1d071 -r b6a55daaf534 website/html/meme-suite-menu.in
--- a/website/html/meme-suite-menu.in	Fri Dec 07 10:34:33 2012 +1000
+++ b/website/html/meme-suite-menu.in	Fri Jan 25 11:34:30 2013 +1000
@@ -33,7 +33,7 @@
       ['Downloads', html_path+'downloads.html',
         ['Download MEME Suite Software', html_path+'meme-download.html'],
         ['Copyright', html_path+'COPYRIGHT.html'],
-        ['Commercial Licenses', 'http://invent.ucsd.edu/technology/cases/2010/SD2010-808.shtml']
+        ['Commercial Licenses', 'http://invent.ucsd.edu/technology/cases/2010/documents/MEME4_0_Jun_28_2011.pdf']
       ],
       ['User Support', html_path+'resources.html',
         ['Q&A Forum', 'https://groups.google.com/forum/#!forum/meme-suite'],
diff -r a8846bbb72a3 src/compute-prior-dist.c
--- a/src/compute-prior-dist.c	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/compute-prior-dist.c	Tue Jan 22 12:51:53 2013 -0800
@@ -35,7 +35,10 @@
 
   // Read each prior, find max and min of distribution.
   DATA_BLOCK_READER_T *psp_reader = NULL;
-  psp_reader = new_prior_reader_from_psp(filename);
+  psp_reader = new_prior_reader_from_psp(
+    FALSE, // Don't try to parse genomic coord.
+    filename
+  );
   DATA_BLOCK_T *psp_block = new_prior_block();
   double min_prior = 1.0;
   double max_prior = 0.0;
diff -r a8846bbb72a3 src/compute-uniform-priors.c
--- a/src/compute-uniform-priors.c	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/compute-uniform-priors.c	Tue Jan 22 12:51:53 2013 -0800
@@ -37,8 +37,10 @@
 
   char *seq_name = NULL;
 
-  DATA_BLOCK_READER_T *prior_reader 
-    = new_prior_reader_from_psp(filename);
+  DATA_BLOCK_READER_T *prior_reader = new_prior_reader_from_psp(
+      FALSE, // Don't parse genomic coord.
+      filename
+    );
   DATA_BLOCK_T *prior_block = new_prior_block();
 
   if (uniform_prior < 0.0L) {
diff -r a8846bbb72a3 src/fasta-io.c
--- a/src/fasta-io.c	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/fasta-io.c	Tue Jan 22 12:51:53 2013 -0800
@@ -327,9 +327,11 @@
   *sequences = (SEQ_T**)mm_malloc(sizeof(SEQ_T*) * num_allocated);
 
   // Allocate the DATA_BLOCK_READER
-  DATA_BLOCK_READER_T *fasta_reader
-    = new_seq_reader_from_fasta(alph, fasta_filename);
-
+  DATA_BLOCK_READER_T *fasta_reader = new_seq_reader_from_fasta(
+    TRUE, // parse genomic coord. 
+    alph, 
+    fasta_filename
+  );
   /* Read the sequences one by one. */
   i_seq = 0;
   while (
diff -r a8846bbb72a3 src/fimo.c
--- a/src/fimo.c	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/fimo.c	Tue Jan 22 12:51:53 2013 -0800
@@ -65,6 +65,7 @@
 
   BOOLEAN_T allow_clobber;      // Allow overwritting of files in output directory.
   BOOLEAN_T compute_qvalues;    // Compute q-values
+  BOOLEAN_T parse_genomic_coord;// Parse genomic coord. from seq. headers. 
   BOOLEAN_T text_only;          // Generate only plain text output
   BOOLEAN_T max_strand;         // When scores available for both strands
                                 // print only the max of the two strands.
@@ -162,6 +163,7 @@
     {"o", REQUIRED_VALUE},
     {"oc", REQUIRED_VALUE},
     {"no-qvalue", NO_VALUE},
+    {"parse-genomic-coord", NO_VALUE},
     {"psp", REQUIRED_VALUE},
     {"prior-dist", REQUIRED_VALUE},
     {"qv-thresh", NO_VALUE},
@@ -188,6 +190,7 @@
     "     --norc\n"
     "     --o <output dir> (default=fimo_out)\n"
     "     --oc <output dir> (default=fimo_out)\n"
+    "     --parse-genomic-coord\n"
     "     --psp <PSP filename> (default none)\n"
     "     --prior-dist <PSP distribution filename> (default none)\n"
     "     --qv-thresh\n"
@@ -205,6 +208,7 @@
   options->allow_clobber = TRUE;
   options->compute_qvalues = TRUE;
   options->max_strand = FALSE;
+  options->parse_genomic_coord = FALSE;
   options->threshold_type = PV_THRESH;
   options->text_only = FALSE;
   options->scan_both_strands = TRUE;
@@ -294,6 +298,9 @@
       options->output_dirname = option_value;
       options->allow_clobber = TRUE;
     }
+    else if (strcmp(option_name, "parse-genomic-coord") == 0){
+      options->parse_genomic_coord = TRUE;
+    }
     else if (strcmp(option_name, "thresh") == 0){
       options->output_threshold = atof(option_value);
     }
@@ -994,6 +1001,12 @@
   );
   fprintf(
     out,
+    "<setting name=\"%s\">%s</setting>\n",
+    "parse genomic coord.",
+     boolean_to_string(options->parse_genomic_coord)
+  );
+  fprintf(
+    out,
     "<setting name=\"%s\">%3.2g</setting>\n",
     "pseudocount",
     options->pseudocount
@@ -1201,14 +1214,19 @@
   int num_motif_names = 0;
   fimo_read_motifs(&options, &num_motif_names, &motifs, &bg_freqs);
 
-  DATA_BLOCK_READER_T *fasta_reader 
-    = new_seq_reader_from_fasta(options.alphabet, options.seq_filename);
+  DATA_BLOCK_READER_T *fasta_reader = new_seq_reader_from_fasta(
+    options.parse_genomic_coord,
+    options.alphabet, 
+    options.seq_filename
+  );
 
   DATA_BLOCK_READER_T *psp_reader = NULL;
   if (options.psp_filename != NULL) {
-    psp_reader = new_prior_reader_from_psp(options.psp_filename);
+    psp_reader = new_prior_reader_from_psp(
+      options.parse_genomic_coord,
+      options.psp_filename
+    );
   }
-
   PRIOR_DIST_T *prior_dist = NULL;
   if (options.prior_distribution_filename) {
     prior_dist = new_prior_dist(options.prior_distribution_filename);
diff -r a8846bbb72a3 src/prior-reader-from-psp.c
--- a/src/prior-reader-from-psp.c	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/prior-reader-from-psp.c	Tue Jan 22 12:51:53 2013 -0800
@@ -19,6 +19,7 @@
 
 typedef struct psp_data_block_reader {
   BOOLEAN_T at_start_of_line;
+  BOOLEAN_T parse_genomic_coord;
   int current_position;
   char* filename;
   size_t filename_len; // Includes trailing '\0'
@@ -33,7 +34,6 @@
 
 // Forward declarations
 
-DATA_BLOCK_READER_T *new_prior_reader_from_psp(const char *filename);
 void free_prior_reader_from_psp(DATA_BLOCK_READER_T *reader);
 BOOLEAN_T close_prior_reader_from_psp(DATA_BLOCK_READER_T *reader);
 BOOLEAN_T reset_prior_reader_from_psp(DATA_BLOCK_READER_T *reader);
@@ -58,9 +58,10 @@
  * This function creates an instance of a data block reader UDT for reading
  * priors from a MEME PSP file.
  *****************************************************************************/
-DATA_BLOCK_READER_T *new_prior_reader_from_psp(const char *filename) {
+DATA_BLOCK_READER_T *new_prior_reader_from_psp(BOOLEAN_T parse_genomic_coord, const char *filename) {
   PSP_DATA_BLOCK_READER_T *psp_reader = mm_malloc(sizeof(PSP_DATA_BLOCK_READER_T) * 1);
   psp_reader->at_start_of_line = TRUE;
+  psp_reader->parse_genomic_coord = parse_genomic_coord;
   int filename_len = strlen(filename) + 1;
   psp_reader->filename = mm_malloc(sizeof(char)* filename_len);
   psp_reader->filename_len = filename_len;
@@ -268,7 +269,7 @@
   if (c == '>') {
     BOOLEAN_T found_genomic_coordinates = FALSE;
     result = read_seq_header_from_prior_reader_from_psp(psp_reader);
-    if (result == TRUE) {
+    if (result == TRUE && psp_reader->parse_genomic_coord) {
       // Look for genomic coordinates in header
       found_genomic_coordinates = parse_genomic_coordinates(psp_reader);
     }
diff -r a8846bbb72a3 src/prior-reader-from-psp.h
--- a/src/prior-reader-from-psp.h	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/prior-reader-from-psp.h	Tue Jan 22 12:51:53 2013 -0800
@@ -17,6 +17,8 @@
  * This function creates an instance of a data block reader UDT for reading
  * priors from a MEME PSP file.
  *****************************************************************************/
-DATA_BLOCK_READER_T *new_prior_reader_from_psp(const char *filenae);
-
+DATA_BLOCK_READER_T *new_prior_reader_from_psp(
+  BOOLEAN_T parse_genomic_coord, 
+  const char *filename
+);
 #endif
diff -r a8846bbb72a3 src/seq-reader-from-fasta.c
--- a/src/seq-reader-from-fasta.c	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/seq-reader-from-fasta.c	Tue Jan 22 12:51:53 2013 -0800
@@ -22,6 +22,7 @@
 
 typedef struct seq_reader_from_fasta {
   BOOLEAN_T at_start_of_line;
+  BOOLEAN_T parse_genomic_coord;
   int current_position;
   char* filename;
   size_t filename_len; // Includes trailing '\0'
@@ -37,7 +38,6 @@
 
 // Forward declarations
 
-DATA_BLOCK_READER_T *new_seq_reader_from_fasta(ALPH_T alph, const char *filename);
 void free_seq_reader_from_fasta(DATA_BLOCK_READER_T *reader);
 BOOLEAN_T close_seq_reader_from_fasta(DATA_BLOCK_READER_T *reader);
 BOOLEAN_T reset_seq_reader_from_fasta(DATA_BLOCK_READER_T *reader);
@@ -60,9 +60,14 @@
  * This function creates an instance of a data block reader UDT for reading
  * sequence segments from a FASTA file.
  *****************************************************************************/
-DATA_BLOCK_READER_T *new_seq_reader_from_fasta(ALPH_T alph, const char *filename) {
+DATA_BLOCK_READER_T *new_seq_reader_from_fasta(
+  BOOLEAN_T parse_genomic_coord, 
+  ALPH_T alph, 
+  const char *filename
+) {
   SEQ_READER_FROM_FASTA_T *fasta_reader = mm_malloc(sizeof(SEQ_READER_FROM_FASTA_T) * 1);
   fasta_reader->at_start_of_line = TRUE;
+  fasta_reader->parse_genomic_coord = parse_genomic_coord;
   int filename_len = strlen(filename) + 1;
   fasta_reader->filename = mm_malloc(sizeof(char)* filename_len);
   fasta_reader->filename_len = filename_len;
@@ -501,7 +506,7 @@
   if (c == '>') {
     BOOLEAN_T found_genomic_coordinates = FALSE;
     result = read_seq_header_from_seq_reader_from_fasta(fasta_reader);
-    if (result == TRUE) {
+    if (result == TRUE && fasta_reader->parse_genomic_coord == TRUE) {
       // Look for genomic coordinates in header
       found_genomic_coordinates = parse_genomic_coordinates(fasta_reader);
     }
diff -r a8846bbb72a3 src/seq-reader-from-fasta.h
--- a/src/seq-reader-from-fasta.h	Wed Oct 03 10:59:07 2012 +1000
+++ b/src/seq-reader-from-fasta.h	Tue Jan 22 12:51:53 2013 -0800
@@ -18,7 +18,11 @@
  * This function creates an instance of a data block reader UDT for reading
  * sequence segments from a FASTA file.
  *****************************************************************************/
-DATA_BLOCK_READER_T *new_seq_reader_from_fasta(ALPH_T alph, const char *filename);
+DATA_BLOCK_READER_T *new_seq_reader_from_fasta(
+  BOOLEAN_T parse_genomic_coord, 
+  ALPH_T alph, 
+  const char *filename
+);
 
 /******************************************************************************
  * This function parses a FASTA sequence header and returns the
